INSERT INTO feedback (id,created_at,course_id,rating,comment) VALUES
(1,1625170965,1,5,"Quem me deu a cadeira foi o Rui Henriques (god bless his soul) mas infelizmente este ano n vai ser por isso este feedback da cadeira pode estar completamente ao lado.
O tema é super engraçado e interessante, mesmo eu não sendo da area e gostando de jogos da uma visão super fixe de literalmente agentes de jogos e não so funcionam e fazem as suas decisões. A teorica é overall fun, com alguma matematica mas nada de especial, basicamente algum PE. No entanto o gold da cadeira esta no projeto. O projeto é literalmente 'ESCOLHAM O QUE QUEREM FAZER', podem fazer um único agente que interage com o utilizador ou podem fazer um sistema multi agentes em que interagem uns com os outros e fazer varios tipos. Voces basicamente pensam num tema/projeto, apresentam ao professor dos labs, decidem numa ideia e fazem, acabando o projeto com umas analises giras. Outra vantagem é q a cadeira acaba a tipo 2/3 do semestre, pelo menos as teoricas (n me lembro se o projeto tmb), mas pelo menos não têm exame nem nada. Da um average trabalho, talvez ate para baixo em termos de carga (4.5/10), recomendo é muito giro"),
(2,1657533881,1,3,"O projeto é livre (no sentido em que és tu que o propões seguindo x regras do stor). O que significa que podes escolher a dificuldade que quiseres. No meu caso não estava muito interessada na cadeira era a única compativel com o meu horário por isso escolhi um tema simples em relação a IA (literalmente adaptei os exercícios dos labs a um environment existente). Overall o que deu mais trabalho foi adaptar o ambiente porque tinha bugs mas tbh dos projetos que deu menos trabalho. Tive 17 no projeto no fim.

As teóricas do Sardinha apenas fui a 50% por questões de horário ele não diz muito para além dos slides por isso nem foi dramático faltar. O mais útil são os exercícios que ele faz mas ele foi impecável e publicou sempre tudo no fénix super regularmente. O exame era exercicios parecidos aos que fizemos nas aulas basta estudar isso para o exame (não teve nota mínima which is nice). Não estudei muito e tive 13.

Para mim é indiferente mas para quem tenha mesmo interesse na cadeira no fenix o programa que está lá é tipo possiveis matérias que ele pode dar. Demos cerca de 50% do que lá está."),
(3,1720051200,1,4,"A matéria de AASMA consiste essencialmente em Teoria de Jogos + algum Reinforcement Learning, pelo que é um bom pairing com PADI no P3 (há uma pequena parte da matéria que é comum). As teóricas, dadas pelos profs Rui Prada e Manuel Lopes, são bastante convencionais, e cobre-se a teoria que está nos slides para além de ser fazer alguns exercícios, que não têm resoluções disponibilizadas no Fénix. Nenhuma da matéria é particularmente complicada ou difícil de perceber, e diria que a cadeira dá uma boa introdução à área.

O projeto, como é dito acima, é livre, o que pode ser bom ou mau dependendo da abordagem, porque introduz muita variabilidade. Em termos de temas e complexidade, pode ir desde um ambiente simples com uma grelha e agentes que são bolinhas até a um ambiente custom ou complexo (podem fazer o projeto no [minecraft](https://marlo.readthedocs.io/en/latest/usage/multiagent_example.html#example-code)). Para além disso, o conteúdo do projeto em si poderá consistir mais em implementar comportamento para os agentes à base de regras manuais (e aí terão que usar conceitos de teoria de jogos na análise e no relatório) ou comportamento aprendido com reinforcement learning, que pode ser mais imprevisível mas também mais interessantes. Outra fonte de variabilidade é o professor dos laboratórios, que acompanha e avalia o projeto, e por isso convém ser bom. Em termos de conselhos diria que é uma cadeira super fixe se tiverem interesse genuíno, tempo e colegas competentes para fazer um projeto mais tryhard, mas que também se faz bem se quiserem só ter uma overview da área e depois fizerem um projeto mais simples.

tl;dr cadeira fixe, aborda game theory e RL de forma geral, é importante escolher bem o projeto e o professor de labs"),
(4,1625335523,2,0,"Este semestre foi com o Luís Russo. Uma das coisas que fez foi querer logo começar a treinar pro mepp e assim tivemos avaliação literalmente todas as semanas. A aulas eram confusas porque ele tinha de estar a tentar perceber o que queria fazer on the go e o ÚNICO material de estudo eram as notas que ele tirava no tablet durante a aula, portanto ainda mais confusas eram. Sure, disponibilizou exames para nos ajudar a estudar, mas nunca cheguei a encontrar nenhum exercício que fosse parecido ao das avaliações. Estas começaram por durar 20 mins e foram progressivamente aumentado até aos 40 mins, à medida que ia percebendo que não fazia a mínima ideia como fazer uma avaliação justa. Foi tudo muito à base de experimentação. Inicialmente ele dizia especificamente que matéria é que ia sair, mas depois cansou-se de escrever semanalmente meia frase no fenix e ficamos à escuras. Foi aí que deixei de estudar, mas não foi por isso que parei de sentir ansiedade metade da semana, literalmente todas as semanas do semestre, só a pensar na avaliação. Nunca tive tanto tilt numa cadeira.
Enfim, ao menos ele antes da avaliação explicava os exs e aposto que esse era o estudo de muita gente. Aconteceu algumas vezes ele ficar completamente empancado com um exercício da treta e depois saía um mil vezes pior. Principalmente porque a explicação era sempre, tens esta estrutura de dados e queremos fazer um ajuste de um valor, como é que procedemos? Mas na avaliação tinhas sempre que desenhar a cena da raiz, estilo 'faz um grafo/heap/árvore XPTO com estes 10 valores: 67,12,24,67,12,8,78, 56,34,21'
E lá passava eu todas as avaliações 5 mins a garantir que conseguia pôr os números todos por ordem sem enganos só para conseguir começar a desenhar a estrutura de dados e só aí é que começava o exercício. Outra implicação disso é que enquanto a explicação era estilo 'insere um nó', na avaliação, só para começares a fazer o exercício tinhas que inserir 10 nós, o que não é assim tão trivial pq há umas estruturas todas random. Penso que era assim pq a avaliação era distribuída pelo mooshak numa página de HTML simples e não se queria dar ao esforço de fazer upload de imagens. 
Não sei se era o único, mas eu basicamente nunca tive tempo pra terminar nenhuma avaliação.
Eram 12 avaliações e as duas piores não contavam.
Em relação à matéria, ele passou um mês e meio a dar strings, sem tocar literalmente em nada do programa. Depois o pessoal fez queixa e passamos a lidar com algoritmos probabilisticos. Pessoalmente caguei completamente a partir desse ponto e nunca respondi a nada que incluía cálculos de probabilidades. Os exercícios pareciam me straight up chinês, mas depois ia às aulas de dúvidas e ele explicava me tudo e até pareciam simples, no entanto ele como dava bastantes coisas, para ser assim simples era preciso saber a qual delas é que se estava a referir.
Os projetos eram implementar um algoritmo ou dois, parece simples right. Well os algoritmos eram avançados (eheh) então tínhamos poucos recursos onde aprender sobre eles. Um desses era um livro, até era interessante de ler, mas não era propriamente divertido interpretar o livro só pra escrever um algoritmo diretamente. Depois havia o problema de que ele só dava 6 exemplos com solução pra testar, sendo que 3 deles eram repetidos. Mesmo que se pedi-se mais. Depois para o stor garantir que tínhamos aquilo certo, era necessário dar output pro mooshak do número de comparações, então podias ter tudo certo mas se tivesses feito algo meio diferente, kaput, tinhas mal, quase que tinhas que adivinhar como é que ele fez, ou no caso de muitos, perguntar lhe.
Para adicionar ao tilt geral do semestre faltei a um teste pq tinha planeado acabar o projeto semana e meia mais cedo, mas tive esse tempo todo à procura de um '+1' errado no código (isto porque interpretar o livro não era propriamente fácil).
Como era no mooshak esse +1 era a diferença entre 4 valores e 20 valores. Not cool. O stor não curtiu dos 20s todos e portanto, improvisou mais métodos de avaliação para além do mooshak: pediu comentários pq ia avaliar o código, análise estática de complexidade com uma ferramenta e nsei mais o quê. Estava na esperança que desistisse dessa fantochada até porque menos de metade das pessoas submeteram o segundo projeto. Mas não me parece que tenha desistido disso porque segundo ele vai demorar mês e meio a corrigir uma cena avaliada pela mooshak. O que me mais me chateia nisso é que ele adiou o projeto apenas 2 dias! quando lhe pediram (antes de adiar só tipo 1/4 das pessoas é que tinham submetido) e agora quem for preciso ir à época especial lixa se pq vai lançar as notas que restam dia 16 de Julho, segundo ele.
Tentei dar os factos e ser imparcial mas honestly a cadeira para mim foi pura tortura mental, foi desinteressante, não havia qualquer ligação entre as coisas, aka, eram só pingas de matéria sem qualquer coesão. Sinto que não aprendi nada de útil, preferia deixar estas pingas para aprender por mim caso tivesse alguma necessidade.
Conclusão, se for o Russo é trap."),
(5,1625267571,3,0,"Boa base para quem tem interesse em IoT.
Fala-se de conceitos básicos de circuitos para depois aplicar em Arduino em 3 mini-projetos: o primeiro sobre atuadores, o segundo sobre sensores e o terceiro a junção dos 2 através de comunicação entre os mesmos. Entretanto na teórica abordam-se vários tipos de design de arquiteturas IoT e do design dos sistemas."),
(6,1625192565,4,0,"ADSI, que é Administração de Dados e Sistemas de Informação, é basicamente Base de Dados 2, falando de tudo desde optimizações de queries a Bases de Dados distribuidas. O que ouvi é que a dificuldade é pouca e para o pessoal de SD que esta a procura de uma 4ª relativamente facil mas que ainda queira aprender algo é uma boa escolha, eu pelo menos vou faze-la agora este semestre e o feedback que tive foi positivo"),
(7,1625335407,5,0,"Aemp mudou de estrutura no ano em que fiz a cadeira, passou a ter mais carga horaria, entregas semanais + 2 projetos + 2 testes, its a lot, mas fazível. Nao tendo muito tempo a cadeira faz se bem com 14-16 e efetivamente o que custa mais sao as entregas semanais porque a materia para as mesmas so era fornecida efetivamente apos a entrega. 90% da cadeira 'e modelacao e n acho necessario ter tido AMS para  fazer.
Nao contem com os professores para vos esclarecer duvidas....."),
(8,1625237481,6,0,"[João Borges](https://github.com/RageKnify):

Acho fixe, os tópicos não são muito aprofundados mas são interessantes.
Nas teóricas fala-se acima de tudo sobre DevOps, que é fixe. Tem umas aulas no inicio sobre construir Data Centers, que em princípio não se a aplica a nenhum aluno da cadeira, mas não deixa de ser interessante ouvir falar sobre isso.
Nas práticas o prof faz meio Walk-through dos Labs, basicamente tens um lab todas as semanas em que se aprende qualquer coisa nova:
- Vagrant para se ter VMs
- ansible para fazer provisioning (defines 1 ficheiro em que dizes declarativamente o que é preciso fazer e depois corres esse ficheiro e por SSH o ansible instala / copia o que for preciso)
- terraform para ligar à vmcloud (tipo Google cloud mas do IST) e depois mesmo Google Cloud e cria VMs / Redes, terraform também é declarativo (o prof vai atualizando ao longo dos anos, por isso para o ano pode mudar um bocado)
Também se fala de Docker e Kubernetes um pouco no final

Os Labs são bastantes fáceis e tem-se tipo 2 dias em que os alunos dão feedback uns aos outros (precisas de fazer 3 feedbacks para ter a nota máxima) por isso mesmo que cometas erros pequenos dá para corrigir antes do prof ver. (Fui ver ao Fénix, a moda é tipo 17 na nota desta parte)

Depois a componente de Projeto Final dependeu do prof das teóricas, no Tagus acho que era apresentar uma aula nas teóricas, acho que tinham vários temas por onde escolher.

Na Alameda havia 3 categorias: Thematic Study, Project/Case Study, Project/Create a Lab for the course e havia 23 temas no total com temas bastante variados nas tecnologias de DevOps. O meu grupo fez o 3º, criar um lab para a cadeira, o tema era *Tools for Cloud Infrastructure - Image Building: Create a Lab for the course - Deploy a service in a small infrastructure with Docker Compose (including Application, Database, Persistent shared Volume)  in a local Lab experiment launched with Vagrant*.
E foi fixe, fomos perceber melhor como funcionava e pensamos como mostrar as vantagens do docker-compose.
O projeto acaba por ser onde aprofundas mais.
Uma cena fixe foi que a entrega acabou por ser dia 31 de Dezembro, e depois na 1ª semana de exames fizemos uma apresentação que não deu muito trabalho, preparamos uns slides para introduzir e depois mostramos o video de walkthrough do Lab. É fixe para dar pouco trabalho, ao longo do semestre era tipo 2 ou 3 horas e fazias o Lab, nunca te gasta muito tempo."),
(9,1625237481,6,0,"No tagus a avaliação é os labs + uma apresentação, em q todas as aulas teoricas são só as apresentações dos alunos. Escusado sera dizer q o q 'aprendes' nas teoricas esta ao click de ires ao google e procurares o mesmo q os outros pesquisaram, sendo as apresentações dos mais e diversos temas desde os varios sistemas cloud comerciais, segurança, base de dados, quantum computing, epa é uma mistura super estranha. No entanto desde q atires para a apresentação um trilião de estatisticas reais e noticias recentes e wtv é 17/18 garantido.

Queres aprender e ter mais trabalho faz na Alameda, se queres ter o minimo de trabalho e nota garantida faz no Tagus"),
(10,1625267683,7,0,"[Tomás Lopes](https://github.com/tomasbflopes):

Uma das cadeiras mais fáceis e menos trabalhosas que fiz desde que estou no técnico - também foi das minhas favoritas, mas eu tenho gostos bastante diferentes da maioria do curso so take that with a grain of salt. Essencialmente, durante a primeira metade da cadeira (Data Integration) grande parte do vosso trabalho é a mexer em ferramentas gráficas (mostly Pentaho Data Integration) para aprenderem como integrar dados de fontes possivelmente heterogéneas (DBs, XML...) e meter tudo numa Data Warehouse; aprendem também a usar essa ferramenta para fazer outros tipos de operações estilo string matching, duplicate detection, etc. Também aprendem a mexer em data profiling tools para verificar a consistência e integridade dos dados, etc. Depois a segunda metade (Data Analysis) envolve mexer noutras ferramentas estilo Saiku Analytics para fazer, well, data analytics, usando uma mistura de drag-and-drop e de código MDX para fazer OLAP queries sobre data cubes. Lá para o fim também aprendem a mexer em reporting tools para pegar nos dados que estão na warehouse e gerar reports automaticamente com base em resultados de queries.

O prof. disponibiliza uma VM com o software já pré-instalado e pré-configurado, o que ajuda imenso, mas podem instalar tudo nativamente.

O prof. das teóricas é excelente, a matéria é pouca por isso ele dá tudo com calma, é super simpático e está sempre pronto a responder a dúvidas. Acho que fui às teóricas todas mesmo por gosto. A avaliação é 70% exame e 30% projeto. Os labs são literalmente guiões, tutoriais que podes seguir passo a passo, e o projeto é uma coisinha minúscula que se faz em 2 tardes em que só tens de fazer o mesmo tipo de coisas que fizeste nos labs. A única parte mais estranha é o exame - a matéria é muito prática mas o exame é mais teórico, e envolve que sejas um bocado mais crítico e mais criativo, em vez de ser simplesmente 'decora tudo e está feito'.

Overall, é uma cadeira que recomendo imenso. Interessante, pouco trabalho, prof excelente."),
(11,1625192565,8,0,"eu gostei mas percebo q n seja para tds, é exatamente o q o nome indica algoritmos e logica. Sao 3 projetos pequenos iguais, so muda o paradigma em q e resolvido, o 1o achei o mais dificil pq tb e mais abstrato mas eram tds relativamente faceis de fazer (os projetos da para fazer tds em python com a respetivas interfaces). O exame e so ter feito os projetos e fazer os exames anteriores. Recomendo ir aos labs, e as teoricas indiferente q tb n fui. Recomendo pq nao da mt trabalho"),
(12,1625192565,11,0,"As teóricas podem ser um pouquinho massadoras, mas os temas são interessantes. Os testes são bastante acessíveis. O projeto é mega aberto, um pouco overwhelming com o quanto vago é, mas depois de teres o tema definido e aceite é fasível. Os labs nao existem, sao so um timeslot para apoio ao projeto e o stor aceita marcar outras horas para o mesmo efeito. Podes fazer projetos low ou high level, up to you."),
(13,1631039114,12,0,"A cadeira de Aprendizagem Profunda é nova em MEIC, pelo que o meu feedback é baseado na cadeira de Aprendizagem e do que li no curriculo de Aprendizagem Profunda. Nesta cadeira o foco são redes neuronais, que são um modelo de machine learning muito utilizado na atualidade (a maioria da inovacao que se vê por ai utiliza estas redes). Na primeira parte da cadeira (topicos 1, 2 e 3), o programa foca-se nas bases destas redes, e podem esperar muita matemática (matrizes, derivadas e gradientes de funções, e um pouco de probabilidades). Na segunda parte (restantes topicos), o foco são diferentes 'arquiteturas' destas redes neuronais para solucionar problemas em varias áreas (imagem, texto, etc.). Aqui diria que a matemática não vai estar tão presente, ou pelo menos, não será o foco principal. Com esta cadeira, vão aprender a resolver 'real-world' problems em ML, e vão ganhar uma noção do que se consegue e não consegue fazer com aprendizagem. Overall, penso que será uma cadeira bastante interessante e com grande aplicação prática (na vida real). É um must para quem quer fazer a especialização de sistemas inteligentes. Para quem está interessado na área, também recomendo visto que irá dar uma noção do que se faz nesta área que neste momento é a 'moda' de AI. Deixo só um aviso, neste momento, a licenciatura de informatica já tem a cadeira de ML. Se esta cadeira assumir esses conhecimentos, para quem não teve essa cadeira, pode ser um choque, mas depende de como os professores abordarem os tópicos."),
(14,1625192565,12,0,"Aprendizagem, ou Machine Learning, acho que é das cadeiras mais importantes para o pessoal de AI, que vai aprender as cenas mais afundo de como os algoritmos de Machine Learning e amigos funciona. É dada pelo deus Andreas Wichert e como tal comedia, asneiras e piadas suicidas não irão faltar nas aulas teoricas. Nevertheless ele é um professor super fixe e sabe super bem do que fala, a area de investigação dele é AI com Quantum computing, recomendo vivamente procurarem o livro dele que são so 200 paginas e introduz bem os temas, eu nem sendo de IA li um bocado e achei bastante interessante, mas têm de requisitar da biblioteca ou encontrar online pq ele custa 90 paus lmao. Voltando a cadeira em si, indo mais a fundo nos algoritmos implica MATH, neste caso integrais e mt CDI 2. Depois têm varios Labs e vão aprender com a vossa vida a fazer formulas matematicas em latex, overall acho que a experiencia é positiva mesmo tendo a matematica por tras e acho que quem va fazer AI que a devia ter, vai passar a pertencer ao curriculo de licenciatura por alguma razão tmb :stuck_out_tongue:"),
(15,1720103965,12,0,"Aprendizagem Profunda é provavelmente a cadeira mais importante de Machine Learning. A matéria é extensiva e bastante completa, e não poupa os detalhes matemáticos (embora não seja preciso saber/perceber tudo). As teóricas foram dadas pelo André Martins a MEIC e pelo Mário Figueiredo a MEEC. São os dois super competentes e percebem do assunto a fundo, e qualquer dúvida que um aluno coloque eles dão uma resposta clara e adequada. Contudo, nem um nem outro é aquele professor hiper carismático que faz kahoots e conta histórias de vida, e por isso as teóricas são maioritariamente expositivas (não deixam de ser interessantes no conteúdo, mas a delivery às vezes cansa ao fim de duas horas). A cadeira começa com abordagens mais clássicas (perceptron, regressão logística e linear, Naive Bayes), algumas das quais são comuns a Apre de licenciatura, e vai avançando para tópicos mais modernos (CNNs, transformers, etc.) e por isso torna-se cada vez mais interessante.

Houve dois mini projetos, que tinham uma parte teórica que implicava saber alguma álgebra, e uma parte prática que consistia em completar código que os professores davam. Achei os dois super assessíveis. As aulas práticas e os exames consistiam essencialmente em resolver exercícios. O exame não é o mais acessível, é um exame a sério *a la* pré-MEPP (poucas escolhas múltiplas + respostas teóricas curtas + exercícios práticos a calcular outputs de modelos e afins + uma pergunta de seleção). Levem calculadora gráfica que dê para multiplicar matrizes btw.

All in all, cadeira super sólida, would recommend."),
(16,1625192565,9,0,"Flipped classroom, as aulas teóricas consistem basicamente em ler o material que o Rito indica e discutir na aula, estes matérias vão desde capítulos a artigos(do rito e de outras pessoas)
No fim de cada aula há um quiz e contam os 70% melhores
[ASoft praticas] Até sair o projeto as aulas práticas é discutir as arquiteturas de vários sistemas, desde graphite a Netflix ao chrome
O projeto este ano saiu muito tarde na minha opinião(mas deu para entregar antes de começar a época de exames)
Basicamente podes documentar a arquitetura do quizzes tutor ou adicionar funcionalidades ao mesmo, este ano foi trabalhar com microservices e foi adicionar qualidades ao sistema(performance, availability, security etc)
O enunciado do projeto é bastante vago e curto (5 linhas?) por isso aconselho a falar bastante com o prof
Final regards, don’t forget to sink(think)
(60% teóricas e 40% projeto)"),
(17,1720652252,9,0,"A cadeira tem uma carga muito teórica e muito pouco prática, por isso se gostam de fazer coisas em concreto vão sentir falta disso. É, portanto, um contraste completo com a cadeira do professor Rito na licenciatura.
Tens quizes no final das aulas teóricas (feitos no QuizzesTutor) que substituem a nota de exame. Isso é bom, mas tens que ir estudando e lendo os capítulos dos livros da cadeira que o professor assinala para cada quiz, que às vezes são bastante extensos, o que é chato.
Neste ano, o tema de projeto foi desenhar a aquitetura do YouTube de raiz com base na matéria dada nas aulas téoricas.
O feedback anterior não realça suficientemente o quão absolutamente necessário é falarem com o professor. Ele não se chateia, por isso **persigam-no** até conseguirem extrair **tudo** o que é essencial para a modelação da arquitetura do sistema do projeto."),
(18,1631541616,10,0,"A cadeira é gira mas achei bastante trabalhosa e difícil. Foi provavelmente a cadeira que achei mais trabalhosa até agora no mestrado.
É full pratica (acho que em tempos teve testes ou exame tbm idk, mas pelo menos o ano passado foi 100% pratica), e é feito em C++ e glsl.
Os primeiros 50% da cadeira são 6 entregas a pares, que até são fáceis, a unica que achei mais difícil foi a ultima, as primeiras entregas dessas 6 são basicamente para te familiarizares com C++ e com OpenGL e tens uma semana para fazer cada uma dessas entregas (menos a ultima que são duas semanas).
Os 50% finais da cadeira foi o que achei mais dificil, é feito em grupos de 4 e o que vais fazer no projeto basicamente és tu que escolhes, escolhendo uma série de challenges para implementar no projeto que envolvem conceitos aprendidos nas aulas. Está dividido em duas entregas, uma Intermédia e uma Final. 
No inicio ainda se faz um report sobre o que vamos implementar e os challenges que cada membro implementa e em que datas implementa isso. Por causa disso, na minha opinião a entrega Intermédia é a maior moca, pois a avaliação é individual, e como cada membro tem challenges especificos para implementar, um membro do grupo cujos challenges sejam para ser implementados no final do projeto, depois da entrega intermedia, tem uma nota meio random.org. Depois a entrega final, é basicamente ter tudo implementado.
Pessoalmente não recomendo a cadeira pela carga de trabalho.
Eu não sou o melhor exemplo, pois tive bue dificuldade nas cadeiras dessa área, mas essa foi a minha esperiência com a cadeira."),
(19,1625192565,13,0,"Má cadeira. Um excesso de matéria, há aulas em que a prof chega a dar 150+ slides que têm informação distinta em cada um, não dando chance para perceberes algumas das coisas que lá estão. A cadeira rege-se por quantidade e não qualidade: 'aprendes' por alto kilos de informação e não vais a depth de nada. O problema disto é que chegas ao exame e tens kilos de matéria que decorar, pq nunca sabes o que vai ser pedido ao certo. Os labs e projectos são fáceis e engraçados. A matéria em si é gira, peca apenas por ser demasiada. Se estiveres muito interessado ou curioso pela área go for it, senão run, fast"),
(20,1625192565,13,0,"A única parte que gostei da cadeira foi o início, em que aplicas algoritmos relacionados com a matéria, sinto que foi a única coisa que absorvi de toda a cadeira. A forma como a professora expõe a matéria é feita de forma demasiado confusa e lá está, quantidade a mais e que até tornam coisas fáceis como os labs em problemas de 7 cabeças se nos auxiliarmos aos slides (para não falar que tinhamos de fazer provas matemáticas numa cadeira de bioinformática, coisa que nunca cheguei a perceber o porquê, but thats whatever). Para além disso, o professor não é o mesmo durante o semestre: tivemos 3 professores durante o semestre a dar teóricas/práticas, cada um com o seu ritmo de trabalho, o que tornou teóricas completamente useless (pelo menos para mim). Para além disso (e que foi motivo meu de desmotivação maior face à cadeira), o último lab achei demasiado complexo e completamente diferente face ao nível dos labs anteriores porque lá está, o prof mudou a meio e alterou o ritmo de trabalho de uma forma meio ridícula. Com isto, deixo apenas a minha não recomendação da cadeira, a não ser que seja mesmo esta área que queiras seguir no futuro"),
(21,1625194874,17,0,"CCU foi das cadeiras que mais gostei, tens um projeto de tema relativamente aberto que vais construindo ao longo do semestre, o processo é parecido com IPM in a way, vais apresentando partes quase todas as semanas, o que é bom para time management, a unica deadline mais apertada é o development propriamente dito, não há testes nem fichas, o que aprendes nas teóricas é aplicado diretamente no projeto, os docentes são porreiros e dão bastante apoio, podes fazer o projeto na tecnologia que aches melhor e no final tens um relatório de 25 paginas mas podes usar bué visuals e faz-se bem, grupos de 5/6 com responsabilidades divididas pelos membros, highly recomend"),
(22,1625323600,18,0,"A cadeira de ciência de dados foca-se em ensinar os princípios e abordagens utilizados para resolver problemas relacionados com a análise e extração de informação de dados.
Existem várias fases num problema destes (onde se inclui a parte de treinar modelos mas não só) e a cadeira tenta passar por todas, daí a cadeira aborda uma quantidade enorme de matéria.
No entanto, é uma cadeira bastante prática e, como tal, não aprofunda nenhum dos tópicos, e pode parecer bastante overwhelming.
Esta é uma descrição dos objetivos gerais de uma cadeira deste género.

Falando em concreto desta 'iteração' da cadeira: Em termos de organização as teóricas são 30min de vídeos onde a stora faz uma 'introdução' à materia e depois o resto da aula é passado a aplicar a nova matéria num caso de estudo.
Os vídeos são mesmo muito introdução e, para quem quer aprender a matéria um pouco mais a fundo, penso que vai parecer insuficiente.
O resto da aula também não é muito melhor, visto que a professora mostra um monte de gráficos (exceto quando tem bugs no código e não mostra nada).
As aulas práticas são de apoio ao projeto, onde cada grupo tem um slot de 10 min para discutir o progresso. Pareceu-me pouco, e várias vezes penso que ficaram assuntos por discutir.

Pontos positivos: penso que a literatura da cadeira é bastante boa e dá uma introdução bastante leve a estes tópicos embora sempre com a vertente matemática (para quem tiver interessado, os pdfs estão disponíveis na net).

Pontos negativos: a cadeira está claramente mal organizada o que piora o problema de esta cadeira se querer focar em muitos tópicos.
A professora das teóricas é inútil e o exame é escolha múltipla com perguntas bastante dúbias.

Overall, penso que para quem quiser fazer a especialização de Sistemas Inteligentes é uma cadeira que deve ser feita, embora vá ser um sofrimento durante todo o semestre, mas fala de tópicos importantes.
Para quem está curioso da área, penso que num mundo ideal seria uma boa opção mas, nestas circunstâncias, é melhor ter em conta o trabalho que a cadeira vai dar e talvez seja melhor considerar outras cadeiras, principalmente se o objetivo for aprender os fundamentos de Machine Learning."),
(23,1625192565,18,0,"Após completar CDados, terás na tua bagagem ligeiros conhecimentos de estatística aplicáveis à emergente economia dos dados. Mas, sobretudo, sairás um ser humano mais resiliente de tanta merda que vais ter de aturar na tua viagem. Rezo por ti."),
(24,1720106621,18,0,"Ciência de Dados foi de longe a cadeira mais mal organizada e inútil que tive no 1º ano de MEIC. As teóricas foram dadas pela Cláudia Antunes, cuja falta de preocupação com a cadeira e os alunos é apenas igualada pela sua falta de conhecimentos de inglês. As teóricas são essencialmente supérfluas. É suposto seguirem um modelo de 'aula invertida' em que fazes o trabalho da professora em casa, vendo os vídeos do MOOC que cobrem meio mundo de tópicos sem aprofundar nenhum deles, e depois estás na aula a ver os slidezinhos da professora com cenários cartoon sem conexão com a realidade, e no fim ela analiza um problema tipo exame. Não há nenhum motivo para não ver os vídeos a 2x e depois dar uma vista de olhos pelos slides sem pôr os pés nas aulas, até porque nem o exame nem o projeto necessitam de conhecimentos para além disso.

O projeto é uma farsa, feito em grupos de 4 alunos, que são subdivididos em 2 subgrupos (por nenhum motivo, seria idêntico ter grupos de 2, mas assim dá para seres penalizado pelo trabalho dos outros :) ), e em que cada subgrupo aplica uma série de técnicas de tratamento e análise de dados a um dataset que a professora dá, o que na prática se traduz em dar copy paste de código que a professora já tem num site dela. Se copiares o código, apanhas uma seca porque não estás a fazer nada, se não copiares, tens só má nota, porque não há espaço para ser inventivo ou criativo. As técnicas a aplicar nunca mais acabam, e às vezes as células dos notebooks com o código da stora demoram eternidades a correr. Para mais, a maior parte delas são completamente desadequadas ao dataset e a sua aplicação não é influenciada por conhecimento ou compreensão do domínio, tipo aplicar análise de periodicidade e fazer derivadas com dados que sobem monòtonamente, e isto é o oposto do objetivo de análise de dados. Como se isto não bastasse, a professora é avara a dar notas, por vezes por motivos arbitrários.

As aulas práticas são ainda mais inúteis que as teóricas - metade são resolver exercícios de exame com um TA, como se com 5 checkpoints do projeto fosses assistir a um aluno da tua idade que percebe tanto quanto tu a resolver perguntas de exame; a outra metade é avaliar o checkpoints do projeto.

O exame é absurdo, exclusivamente perguntas de verdadeiro/falso em que metade das respostas não faz sentido ou depende da interpretação. Não há resoluções de referência para as perguntas teóricas, porque honestamente metade das respostas só fazem sentido na mente da professora. É daquelas que não conseguem apanhar a big picture e reduzem tudo a categoriazinhas arbitrárias que deve ter retirado do livro de pop-science do Pedro Domingos, e os alunos têm que se limitar a aprender a lógica redutora dela. Ninguém teve mais que 17 ao exame ou à cadeira, afaik, com 200 alunos na cadeira. Quando alguém tem 200 dos melhores alunos do país e nenhum tira melhor que 17, é porque esse alguém falhou redondamente no desenho do curso.

Por último, a professora em si é desagradável com os alunos, especialmente rapazes. Nota-se que tem um favoritismo pelas alunas, e consegue ser condescendente ou mesmo insultuosa com os rapazes, a usar termos como 'rapazinho' para se referir aos alunos. No único horário de dúvidas a que foi, não percebeu uma pergunta super simples e deu a entender que a culpa era minha por não estar a perceber, foi mesmo desagradável e desperdiçou 10 minutos do meu tempo a insultar a minha inteligência em vez de responder diretamente à pergunta.

Essencialmente, CD é a estrutura de Compiladores aplicada a Data Science, para quem teve LEIC. Avaliação mecanizada e incessante à base da cópia, aulas pouco inspiradas e não preparadas, docente condescendente e despreocupado, em que tens uma nota mais ou menos razoável se fores um autómato durante um período e depois esqueces-te de tudo no espaço de 30 minutos depois de sair do exame. Fujam desta cadeira como o diabo da cruz, estarão melhor servidos com qualquer bootcamp de Ciência de Dados na internet, ou até mesmo com verem os vídeos do MOOC numa tarde. Se quiserem uma experienciazinha de Machine Learning, façam Aprendizagem Profunda. Se estão com dificuldades em encontrar cadeiras para fazer, procurem opções livres ou tenham um período mais leve."),
(25,1632267100,19,0,"Gostei de aprender a parte teórica, não é nada que não se aprendesse pelo youtube, e vais ter de recorrer ao youtube para fazer aquilo, porque enquanto que te ensinam os bocados individuais o projeto é algo mais substancial e sem cuidado desce para esparguete em 2 tempos. O proj é em C++ e por isso a dificuldade da cadeira depende muito do teu grau de conforto com essa linguagem. A avaliação foi uns docs aqui e ali mas principalmente um mini proj semanal e um proj mais completo a meio do semestre (gostei do proj pq tens uma tabela com coisas q podes fazer e cabe-te a ti escolheres quais queres tentar fazer e como vais ligar essas cosas num todo mais conciso). Eu não estava muito confortável com C++ por isso ainda penei durante esses TPCs semanais, mas tenho ideia que para quem percebe da coisa não seja assim tanta carga. Apanhei o Carlos Martinho nas teóricas, 5 estrelas, mas o stor das práticas é aluno de doutoramento e não tenho grande razão de queixa mas às vezes punha-se com feedbacks meio esquisitos, só para mandar vir."),
(26,1625194874,20,0,"CMU é Computação Movel e Ubiqua dada pelo João Garcia, quem ja teve DAD ja o teve nos labs, ele a dar as teoricas é bastante fixe (embora que com o covid as onlines ele ficou um bocado desanimado mas ele adora dar a cadeira). As teoricas têm uma cena fixe que é são so de 45 min/1h porque a outra metade é para apresentar papers, do qual supondo q vai ser com covid vai ser por o video no youtube por isso a aula passa efetivamente para metade. Os temas são interessantes e abrangentes, no inicio começam por explicar android mais em detalhe mas rapdiamente passam para cenas como localização, privacidade e afins, mas são temas giros. No entanto diria que a 'meat' da cadeira esta no projeto. O projeto é fazer uma aplicação android em que têm X requirimentos obrigatorios que são prai 15 a 16 valores no total, mas a cena fixe é que depois podem escolher de entre 6 a 8 valores de cenas que podem aplicar no vosso projeto e fazer valores extra que contam como bonus para o projeto, por isso conseguem ter um 20 garantido se puserem o trabalho. No entanto a verdade é que o projeto da bastante trabalho, não em termos de dificuldade mas pq é muita cena, no entanto este trabalho não é muito se realmente planearem o vosso tempo e as cenas que planeam implementar, eu fiz 22 ou 24 valores do projeto com 3 semanas de antecedencia, com grupos de 3 em que cada um era encarregado por fazer uma parte em cada semana. Moral da historia: Recomendo a cadeira, é bastante gira mas têm de começar o projeto ASAP e fazer trabalho constante, pq fazer este projeto a ultima da hora é impossivel. Se quiserem depois meto o enunciado do projeto para verem o tipo de cenas q vao implementar, honestamente achei o projeto super giro porque é daqueles que vêm realmente as cenas a acontecer e é super satisfying. Recommended"),
(27,1625194874,21,0,"Isto vai ter foco principal na minha opinião sobre o projeto.
Começando pelo enunciado. O enunciado no nosso ano era muito incompleto e não era específico no que era preciso fazer. Não é que fosse no sentido que havia muita liberdade e podia-se tomar certas decisões, mas sim que faltavam coisas mesmo. É preciso ir a muitos horários de dúvidas até perceber o que é para fazer. Por sorte, o Veiga preocupa-se e ajuda bué, mas não deveria ser necessário (sinto que o prof de SEC tbm se preocupa e não era necessário ir lá para perguntar cada linha do enunciado).
A primeira entrega envolve uma componente de virtualização. É meio chato, porque para quem apenas viu o nome 'nunvem' e não gosta de coisas baixo nível, esta entrega é meio tortura. Tem de ser feito em Java 7, a ferramenta usada não tem uma grande documentação e, pelo que vi, não existem grandes recursos sobre a mesma online. A única coisa que se pode usar é os exemplos do prof (que até são bons).
Em relação à segunda entrega, eu até gostei, mas eu já trabalhava com AWS fazia 1 ano. Sinto que para quem não sabe nada, o projeto não ajuda quase nada a aprender. É bastante confuso e usa a cloud de um modo muito específico, que não é mesmo ideal para quem está a começar. O que se aprende nas práticas de como usar a cloud não ajuda muito, visto que é bué confuso e o prof do lab (o Veiga, no meu caso) faz uma puta de um speedrun que mais vale nem ver. No final a pessoa que conseguiu fazer o projeto, vai sentir dificuldades no futuro a fazer deploy de um servidor com uma base de dados (que não é difícil, é só que a cadeira não é grande coisa para se aprender a usar a cloud).
No final sinto que o projeto até dá bastante trabalho (não ao nível de CMU ou SEC), mas não se aprende assim tanto.
O corpo docente de um modo geral é desorganizado e faz as coisas em cima do joelho. O professor das teóricas parece que snifa uma linha de coca antes de dar a aula e dispara 'OkAeS' a uma velocidade de 60 'OkAyS' por minuto. A matéria dada em relação a cloud não é nada que não se aprenda na internet com facilidade. Muitas das coisas que o prof fala é fácil aprender apenas ganhando algum interesse pelo tópico e ir lendo artigos na net, não é preciso um esforço muito grande. Ainda estou para ver como vai ser o exame, mas considerando que vai ser com o formato online presencial, acho que tem tudo para correr bem :upside_down:

Exame: Bem a matéria é um completo shitshow. Só cenas outdated e random que não servem de muito. As perguntas são mal formuladas e parecem que estão mais para te apanhar do que para ver se sabes. Passa-se muito tempo a decorar coisas que serão esquecidas dias após o exame.

Conclusão: se querem aprender cloud, mais vale ter uma cadeira fácil e aprender no tempo livre, porque não é aqui que vão aprender."),
(28,1625194874,21,0,"Embora as pessoas olhem para o nome e vejam 'CLOUD', é importante notar que tambem esta 'VIRTUALIZAÇÃO' no nome. Muita boa gente entrou nesta cadeira a pensar q ia so brincar na cloud e depois descobriu que metade da cadeira são cenas relativamente low level, por isso take it with a grain of salt. É dada pelo Luis Veiga, é um professor razoavel, ele da as aulas a um ritmo muito rapido mas tmb acho que é preciso tendo em conta o conteudo, considerem-no um budget chaves lmao.
Pessoalmente e as reviews que os meus colegas que fizeram tmb antes, CNV é um bocado trap. Metade da cadeira é dada a falar de Virtualização, o que inclui basicamente Emulação de sistemas e optimizações de emulação, especialmente Assembly e Java Byte Code. A quem curte de cenas Low Level é fixe, eu pessoalmente n gosto de cenas low level e esta parte foi a que mais gostei da cadeira (que é um bocado mau sinal lmao).
A outra parte da teorica é então nuvem, yeeeeey. Basicamente fala dos varios serviços de nuvem, o que cada um faz e como, no entnato eu sinto que ele fala a um nivel muito superficial e parece mais uma apresentação de cada sistema. No final sinto que não aprendi muito da parte cloud. No entanto ha uma cena super importante que dão aqui que é MapReduce e um bocado de big Data, o que é fixe mas pronto, é um diamante no meio do resto.
O projeto é brincar com a AWS e fazer instrumentação de codigo de modo a verem onde é gasto mais poder computacional para depois fazerem um Load Balancer com essa informação. Uma cena fixe e q o projeto é relativamente facil e aprendem a mexer com a AWS, mas ao mesmo tempo fica a saber a pouco. Moral da historia:
Take it with a grain of salt, diria que ha mt pessoal que cai na cadeira pq é 'cloud' mas na verdade sente-se pouco disso. Não me arrependo de ter feito mas tmb não ganhei mt, talvez fiquem mais felizes com outras cadeiras (e n se esqueçam que podem desistir no inicio por outra, por isso podem tentar)"),
(29,1625194874,22,0,"Historicamente, esta cadeira sobre algoritmos paralelos tem dificuldade em arranjar bons problemas para paralelizar.
Há uns anos tentaram meter o sudoku paralelo (hint: dá merda, e todas as formas série são mais rápidas). Este ano, a parte 'paralela' era o ser uma árvore, fora isso tinha muito pouco.
Em termos daquilo que ensinam (OpenMP e MPI) são coisas antiquíssimas.
O OpenMP foi completamente ultrapassado por coisas de work-stealing threadpools (see: rayon or Cilk).
O MPI não conheço propriamente substitutos. Contudo, o meio parece ter avançado para soluções mais especializadas, mas ainda relevantes e genéricas.
Em particular, é criminoso não ser abordado MapReduce. Eu pessoalmente defendo penas de prisão. Há décadas de investigação (e prática de indústria) sobre este tipo de abordagens, que são ideias que generalizam para além de coisas básicas de 'queremos escalar isto'. O MPI é uma cena demasiado flexivel para escalar como deve de ser (aside: o nosso projeto sem MPI fazia 4 alocações, com MPI fazia 50K, what's up with that).
Fiz a cadeira numa lógica de 'vai ser um merda, mas eu conheço a merda e por isso dá pouco trabalho'. Fazer CMU ou CNV acredito que seria igualmente mau, mas não conheço tão bem."),
(30,1625194874,22,0,"Eu diria que a organização da cadeira não é a melhor.
O nosso projeto não tinha o algoritmo mais fácil de paralelizar
Para a parte 1 que tens de usar OpenMP tivemos bué tempo e aquilo não era assim tão complicado.
Para a parte 2 tivemos de usar MPI e para além de termos bem menos tempo ainda pediam uma versão para casos muito grandes (e isso era quase um projeto novo). Depois para testar isto tem de se usar o cluster, e aquilo enche imenso a poucos dias da entrega. A solução do stor foi 'acabem mais cedo' -_-
Outro fator que não me fez gostar muito da cadeira foi o facto destas duas partes serem no mesmo algoritmo. Percebo que seja a melhor maneira de comparar as duas approachs, mas tornou-se bastante chato quando chegámos ao MPI (pelo menos para mim já estava farto de ver aquele código)
De resto a cadeira não é má. Só não sei é se recomendo"),
(31,1625194874,23,0,"Criptografia, desde mais, é uma cadeira do departamento de matematica da qual o professor esta-se a cagar para o pessoal de LEIC. O professor diz coisas como, and I couldnt make this up, 'Nesta cadeira o exame é para pessoal de matematica e o projeto é para o pessoal de informatica. Para o pessoal de LEIC é bom que tenham 20 no projeto porque não vão ter mais de 3 no exame'"),
(32,1625355682,23,0,"[João Borges](https://github.com/RageKnify):

É bastante teórico, o exame são uns 6 exercícios de demonstração, que para LEIC não é normal.

Mas o projeto é bastante fixe, há uma lista de N *papers*, escolhe-se 1 e implementa-se na linguagem que quisermos."),
(33,1625194874,24,0,"o prof e um bacano e os projetos sao abertos e simples e o exame n e nada de dificil. Achei a materia td interessante, game theory e 'modelacao de virus'(n me lembro exatamente do nome mas era mt simples e giro) e tb grafos (parece complexo pq ele da mts formulas como apoio a logica, mas ele diz q n e preciso decorar as formulas e é vdd).
10/10 would recomend"),
(34,1625192565,25,0,"CSF é o ultimate 'hacker' feeling de ciber segurança, o projeto é dos mais giros de mestrado diria, em que seguem um 'crime' informatico e têm de encontrar as várias provas do crime, indo de cenas desde imagens/texto escondido em ficheiros ate trocas de pacotes. O tema dos projetos costuma ser algo atual e 'meme-ish' o q torna sempre mais fun. Em termos de teorica acho o professor bom mas da-se imensas coisas diferentes, um bocado too much especialmente quando depois o exame cobre a materia inteira. Não que os temas sejam desinteressantes mas acaba por ser overwhelming, mas independentemente a tematica é super interesante, o projeto não é super dificil mas trabalhoso, e as vezes frustrante quando passam horas sem encontrar nada, mas sempre super satifying quando encontrem e vão 'decifrando' o projeto e a sua narrativa."),
(35,1625194874,26,0,"Ora, a parte teórica da cadeira é bastante acessível, facilmente tens 15 sem estudar muito. São 2 testes que valem bastante pouco.
A parte prática é composta por 2 projetos e é usado matlab. Os projetos são engraçados e basicamente aprendes a identificar objetos diferentes em imagens, pode ser bastante útil se seguires esta área. Contudo, não concordo com o método de avaliação dos projetos. Basicamente os enunciados nunca são claros e tens uma data de tarefas para fazer. O problema é que a tua nota depende dos projetos dos outros grupos, mesmo que tu faças o que é pedido, se houver outro grupo que faça coisas extra e ele gostar a tua nota piora.
O stor é porreiro e bastante acessível."),
(36,1625194874,26,0,"Eu não curti este semestre. O professor apesar de dar a cadeira há imenso tempo foi messy af. Muitas vezes também o que explicava nas aulas não se traduzia no que queria que fizéssemos nos testes e só nos confundiu a todos. E nos trabalhos de laboratório igual… escrevia um enunciado genérico e estava à espera que adivinhássemos o que ele queria que fizéssemos e a forma de apresentar os resultados. A matéria em si tho é interessante e tinha potential que não foi aproveitado infelizmente"),
(37,1625194874,27,0,"Eu desisti das aulas teóricas desta cadeira, não aprendi muito nelas e não gostei do professor, é o Luís Rodrigues
As práticas são dadas pelo professor das teóricas de CMU o João Garcia, a DAD ele é muito fixe, tem guiões para os laboratórios que até são úteis
O que damos são algoritmos para comunicação distribuída, e há uma parte que é repetição de SD
O projeto é fazeres um sistema replicado, usas gRPC para a comunicação, exatamente igual a SD, e depois na entrega final tens de escolher um algoritmo de replicação dos que deste, fazes um relatório a explicar o porquê de teres usado aquele algoritmo, porque é que ele é bom e isso tudo
O exame é bastante fácil, tem a mesma estrutura há imensos anos e dá para sacares fácil uma boa nota"),
(38,1625194874,27,0,"A matéria é basicamente uma continuação de SD, é bom se essas coisas te interessarem. Sinceramente não tenho muito a apontar, acho que o projeto é apropriado, a matéria é interessante se gostares da área e achei fácil de se estudar para o exame porque o professor disponibilizou muitos materiais (e também é muito disponível para responder a perguntas)"),
(39,1657555481,27,0,"Pos-Mepp:

Projeto super interessante para quem tem interesse na área de SD. Os maiores problemas foi mais de falta de coordenação entre os professores e o enunciado ser ambíguo.

Aulas teóricas super interessantes e bastante práticas no sentido que vais construindo os algoritmos para os perceberes realmente. Exame era parecido a anos pre mepp."),
(40,1625194874,30,0,"Gostei imenso da cadeira, é maioritamente sobre Design Thinking, não é preciso programar nada. Só utilizámos o Figma. Os profs foram bacanos e prestáveis, todos os trabalhos foram iterativos e cada semana havia algo para fazer e davam-te feedback mas só o resultado final é que foi avaliado"),
(41,1625194874,30,0,"_Unica coisa que sei sobre DIIC e' que um prof da cadeira encontrou uma ex-aluna e disse-lhe 'Hey, eu dei-te DIIC o ano passado' e nao se apercebeu de como soou._"),
(42,1625335360,31,0,"ESLE é uma cadeira muito interessante. Considero mesmo muito importante, sobretudo se queres seguir investigação em sistemas distribuídos. Não é mais exigente que SEC, o projeto foi interessante (mas sendo aberto, cada grupo ficou com um sistema diferente pelo que o prof dos labs dava um apoio mais geral). O exame é semelhante a SEC na estrutura, mas a matéria em si não é tão complexa a meu ver"),
(43,1657555481,31,0,"Pos Mepp:
Professor Miguel Matos tornava as teóricas super interessantes, a materia também interessante para quem gosta de questões de escalabilidade e avaliar sistemas. Imo importante para qualquer pessoa que goste da área de SD e sistemas informaticos overall.

Projeto era avaliar um sistema a tua escolha com o que aprendemos nas aulas. Por ser livre pode ter a dificulade quer quiseres. Imo o truque é escolher um sistema facil de dar deploy em docker e que quanto mais servidores pior a performance e etc para correr experiencias.

O exame tens mesmo de perceber os conceitos a fundo porque não é muito direto.
Overall das melhores adaptações ao mepp pelo professor que apanhei."),
(44,1720651829,33,0,"É uma cadeira fixe. A meu ver, a mais interessante da especialização de Engenharia de Software. Usam-se linguagens de especificação formal para modelar software. Faz-se verificação de código contra as especificações. Usa-se a linguagem Dafny, que envolve verificar pré-condições, invariantes e pós-condições e a ferramenta Alloy Analyzer, que usa a linguagem Alloy e tem uma componente gráfica. Pesquisem estas linguagens para verem se gostam. Quem deu todas as aulas da cadeira foi o professor José Fragoso, que é particularmente bom a explicar este tipo de matérias. São feitos muitos exercícios práticos nas aulas e o professor costuma assinalar que tipos de exercícios saem no exame para os alunos saberem exatamente aquilo que têm que saber. Levem caderno e caneta/lápis para as aulas - nesta cadeira fazes código, mas também imensos esboços e rabiscos xD"),
(45,1677582780,32,0,"A cadeira de ETPN tem potencial para ser muito interessante mas infelizmente fica àquem das expectativas por causa do professor da cadeira que não parece perceber nada do que está a falar, é incompreensível com os alunos e overall não é um bom professor. 

A disciplina é essencialmente um seminário por semana com MAPs em cada semana que foram horríves, 15 minutos sob pressão e tudo escolha múltipla que descontava, havia perguntas que não tinhamos abordado na aula, nem estavam nos slides da disciplina nem no LIVRO da disciplina, perguntas cujas respostas se contradiziam a elas próprias…enfim imensas inconsitências nos MAPs. 

All in all tho, é uma cadeira fácil se fizeres estudo autónomo. Eu recomendo o livro da cadeira, à primeira é uma seca, mas à medida que se vai lendo os tópicos começa-se a perceber que ETPN podia ser uma cadeira interessante mas o professor escolheu abordar os tópicos mais aborrecidos que o livro tem para oferecer e da maneira mais preguiçosa possível. O exame é fácil, escolha múltipla que são essencialmente cálculos de 5º ano. Abordamos no total 11 capítulos de matéria do livro mas na prática o professor só colocou 3 capítulos de matéria no exame. O projeto é feito em grupos de 5, também é fácil, dão-te um study case famoso e tens de fazer o esquema para o funcionamento daquela empresa em BPMN bem como as melhorias que proponhas, desde que seja tudo bem justificado certamente se tira uma boa nota no projeot de ETPN, o professor que avalia os projetos é simpático e está sempre disponível a responder a questões sobre o projeto.

Posso dizer que aprendi bastante em ETPN mas foi mesmo fruto de estudo autónomo, não fui a aulas sem ser na primeira semana e fiz bem a cadeira, para quem quiser créditos também é uma cadeira ótima para fazer.")
;


INSERT INTO feedback (id,created_at,course_id,rating,comment) VALUES
(46,1625194874,34,0,"[Tomás Lopes](https://github.com/tomasbflopes):

Not much to say, é essencialmente o mesmo género de matéria e o mesmo género de trabalho que GSI. Quem fez GSI porque dava pouco trabalho e quer outra cadeira assim só com trabalhos semanais meio ranhosos, força. (também é habitual o tal padrão de GSI de ter notas baixas nos primeiros trabalhos e depois ir subindo) O prof. overall até é simpático mas é tão desorganizado como o Borbinha, e não há aulas - só há um turno teórico de 3h por semana mas normalmente não dura mais que meia hora (é só para dúvidas). Also worth noting que esta cadeira já antes da pandemia era totalmente remota (tanto em termos de aulas como em termos de avaliação) e remote teaching é uma das áreas de pesquisa do prof., por isso tenho tipo 99% de certeza que a cadeira vai continuar a ser remota, mesmo que volte a haver aulas presenciais."),
(47,1625194874,35,0,"[Tomás Lopes](https://github.com/tomasbflopes):

É uma cadeira velha dada por velhos presa no tempo dos velhos.

Aprendem não sei quantas técnicas sobre gestão de projetos, quais os lifecycle models para gerir projetos, etc. Falam de time management, organization management, cost/resource management, risk management, etc, tudo num contexto mais waterfall based. O projeto envolve gerir um projeto fictício onde aplicam as técnicas todas que aprendem, e até é giro (mas preparem-se para passar a vossa vida a mexer no Microsoft Project). Depois os testes são mais do mesmo, se participarem no projeto ficam já com tudo meio estudado para os testes.

Em vez de terem aulas teóricas e aulas práticas, só têm 1 bloco teórico-prático de 3h por semana (talvez não seja assim para o ano, com o MEPP...). Os turnos são mais pequenos e a primeira 1h30 é para dar matéria, a segunda 1h30 é para avançar o projeto. Se trabalharem rápido, conseguem logo despachar um bom bocado do projeto só nas aulas, por isso em termos de carga de trabalho também é bastante favorável.

Overall, tirando o facto da cadeira estar muito, mas muito presa no passado (só falam de agile/devops tipo 1 semana), a cadeira até nem é má. Mas fica um aviso: este ano, pelo menos, eles tinham turnos disponíveis em português e turnos em inglês - por amor de deus, inscrevam-se num turno em português. Eu tinha a Rosário num turno inglês e enfim, aquilo doía. E pelo que oiço, o inglês do outro prof também não é muito melhor.

(também é noteworthy dizer, though, que a grande maioria das técnicas que vocês aprendem podem ser aplicadas fora do contexto de projetos informáticos; podem ser aplicadas em essencialmente qualquer tipo de projeto)"),
(48,1625267086,36,0,"é uma cadeira super facil, n posso falar dos conteudos mas é basicamente fazer relatorios semanais. Para o pessoal de segurança o que ouvi é que não ganham muito em termos de conteudo mas lets be real, com o resto das cadeiras é preciso alguma para respirar um pouco lmao. Overall quem precisa de uma cadeira facil e n se importe de fazer um relatoriozinho semanal é commended"),
(49,1625267086,36,0,"A cadeira é sem dúvida alguma a coisa mais chill de sempre. Começa logo pelo facto de o Borbinha ser o responsável. Ele não quer mesmo saber de nada e quem trabalha são os alunos que auxiliam (e são os responsáveis por corrigir).

Há um relatório semanal, no qual são fornecidos vários documentos (por experiência pessoal ler aquilo é praticamente inútil). Pedem um mind map e umas perguntas de resposta aberta / pesquisa sobre um tema.
Todas as semanas também tens de preencher um form para dar review a outros relatórios. Basta mesmo só preencher e no final são 0.5 extra na nota dos relatórios (2 valores nota final).

O projeto tem 3 entregas e são essencialmente um relatório maior e em grupo. A cada entrega fica mais fácil porque aquilo vai acumulando grupos e no final é suposto serem 16 pessoas.

No fim há um 'teste' que é basicamente mais um relatório. São 3 horas para o fazer, e aquilo faz-se bastante bem depois de tantos que já foram feitos antes.

Overall a cadeira faz-se bastante bem. Na primeira semana passei os dias todos a ler e a tentar ao máximo ter o relatório bem. Acabou por ser a minha pior nota dos relatórios. A partir daí comecei a fazer as coisas mais nas calmas e funcionou. Os alunos que corrigem são bastante chill e só querem saber da quantidade de texto que escreves e da quantidade de bold que o teu texto tem.
É a dica mais importante .. usem bold."),
(50,1657555481,36,0,"Pos Mepp:
A adpatação foi um shitshow no sentido em que o professor alterou muita coisa em relacao ao pre mepp. 6 horas de aulas semanais . 6 essays + um final essay. 6 entregas de projeto. 6 reviews

Depende do teu objetivo a fazer a cadeira. Eu só queria os creditos não fui a uma unica aula e Fiz os essays sem ler um unico texto apenas juntava as palavras e mandava pão tive sempre de 4 para cima (de 0 a 5) nas entregas. Se o objetivo for aprender alguma coisa por essay era cerca de 600 paginas para ler. Demorei cerca de meia hora para cada essay e meia hora para cada pergunta do final essay(4 perguntas).
As reviews era um for para dar rank mandei smp random demorava 5 minutos.

O projeto há entregas que dão mais trabalho que outras. Os grupos são random de 5 ou 10 pessoas. No meu caso todos trabalharam por isso cada pessoa fez o minimo e não deu muito trabalho overall (mas se calhares em grupo q ning trabalha fudeu).

Não tem exame.

TDLR: Não aprendi nada mas também não tinha interesse e passei facilmente. Se objetivo for aprender não me parece muito util a forma como o borbinha dá a cadeira."),
(51,1657831569,38,0,"Mepp: Fiz IE este ano, primeiro ano de Mepp, e posso dizer que a cadeira é muito interessante para quem gosta de desafios. O objetivo da cadeira é exatamente o que diz o nome, integrar aplicações. Vão aprender técnicas de integração muito uteis e usadas nos dias de hoje, como MOM (Message oriented middleware), kafka (usado no projeto), como escrever e ler para/de tópicos e como fazer o processamento dos dados dos tópicos com kafka streams. Não achei que fosse preciso conhecimento teorico prévio, mas programação Java é fundamental. Programámos na framework `Quarkus`. O projeto foi uma desorganização total. Era sobre a implementação de um serviço Atonomous Vehicle as a Service, que basicamente era uma aplicação que recebe montes de informação de outras, e interage com apis externas. O projeto foi divido em 3 sprints que tinham como objetivo implementar os casos de uso que eles pedem. E pedem coisas como implementação CRUD numa base de dados AWS RDS, criação de um kafka cluster, criação e processamento de tópicos e interação com serviços (API's) externas. O exame achei acessivel e dos poucos exames do tecnico como pouca matéria para estudar, O projeto é que foi terrivel, não que fosse dificil, mas sim porque o enunciado não era nada nada explicito e o stor não esclarecia muito, e acreditem que o chateiei muito. Quem está indeciso entre fazer ou nao a cadeira, e acha que deve, então força, recomendo e não me arrependo. Se se sentirem perdidos como eu a meio do semestre no projeto e  eventualmente precisarem de ajuda ou alguma 'luz' tenho num repositório o projeto AVaaS (Autonomous-Vehicle-As-A-Service) deste ano no meu github."),
(52,1628112552,39,0,"A cadeira é extremamente introdutória. Aprendes a mexer com ROS (quase tudo auto aprendizagem btw) e os projetos são basicamente só usar packages já existentes para pôr o robot a fazer merdas (localizar-se, pathfinding, etc.). Em termos teoricos aprendes os básicos necessários para fazer os projetos. Aprendemos algoritmos de mapeamento e localização, markov chains, MDPs e tal. Tudo cenas que podes aprender melhor noutras cadeiras de Sistemas Inteligentes"),
(53,1628112552,39,0,"As teóricas falam sobre robôs por alto, ex: 'eis uns robots fixes a andar, eis o que são sensores...' e coisas que já sabes tipo path finding algorithms. Só os uns 15-20% das teoricas é que houve matéria nova útil.
Há 3 mini-projetos. São pequenos e razoavelmente fixes, cada grupo (de 2) tem um robot onde tens que fazê-lo andar e localizar-se no espaço, construir um mapa da sala, etc. Basicamente fazes o msm que um Roomba.  Em cada projeto tens que fazer um relatorio sobre a experiencia. Embora os projetos sejam fáceis, eles dão muito pouca introduçao ao ROS - o sistema que controla os robots. Isso faz com que o setup inicial de te ligares ao robot seja a cena mais dificil, depois disso os projetos tornam-se subsequentemente mais fáceis. É encontrar a package que queres e corrê-la.
Como cada projeto demorava 2 semanas, tens 2 laboratorios a apresentar o progresso no projeto. Rinse and repeat, recebes o enunciado do proximo projeto com antencedencia
A avaliação é 100% os mini-projetos, cada um nao demora muito a fazer mas é facil ficar preso numa cena.
O Prof é bacano e explica bem. O apoio ao projeto é dado por um aluno de PhD que tambem é super prestável mas qualquer um deles pode demorar um bocado a responder-te aos emails por isso tenta perguntar as cenas logo nos labs.

PS: o setup do ROS pode ser mt lixado pq é preciso versões especificas do ROS para os robots. no nosso caso era necessário o Ubuntu 16. WSL nao conta."),
(54,1625194874,40,0,"Cadeira Fácil. Tens a cadeira dividida em três partes. A primeira e a última são dados pela Professora Luísa que é fixe. A segunda é dado pelo Mamede que é dos piores setores de sempre. O teste é relativamente fácil e os projetos são muito faceis mesmo.
A matéria em si, aprendes cenas interessantes, mas tem muita interceção com outras cadeiras de SI na minha opinião.
Em relação a segunda parte da cadeira é uns automatos chamados Transducers, algoritmos de Parsing e uns algoritmos usados para completar frases se não me engano. É fácil, mas é chato quando explicado pelo Mamede. Lembro-me que o que perdi mais tempo a estudar po exame foi perceber o que é que o Mamede tinha andado a dar."),
(55,1730888306,40,0,"-- 24-25 --
Recomendo a cadeira 100%. Mesmo que a área não seja totalmente do teu agrado. Se estás à procura de uma cadeira para fazer, esta é uma boa opção.
A prof Luísa é muito boa, preocupada com os alunos e gosta realmente do que está a fazer! As aulas teóricas passaram a ser dadas só pela Luísa. A avaliação são 2 MAPS (a matéria das teóricas é dividida em 2) e um projeto principal e um projeto de concepts (que é um vídeo de 2 min no máximo, logo nas primeiras duas semanas). O projeto foi fazer a classificação de género de filmes com base no plot do filme. O importante não era a accuracy em si mas sim todo o processo de tentativas usadas e aplicação de técnicas que foram dadas tanto nos labs como nas teóricas.

As teóricas são bastante uteis e os labs ajudam a consolidar os temas que foram dados nas teóricas - exercícios e apoio ao projeto.

Acho que a avaliação é bastante justa, adequada e muito boa!
Além disso, existe um ponto bónus por ires às teóricas - há quase sempre um MiniMAP no fim das teóricas mas podes falar com os outros alunos e ver os slides, mesmo!"),
(56,1625194874,41,0,"Não sei se já fizeram review aqui mas em LP essencialmente falamos da modelação de linguagens de diferentes perspectivas e depois aprendemos a mexer em Coq para provar formalmente propriedades daquilo que modulamos. Coq é meio estranho ao inicio mas pelo menos eu gostei. As aulas teóricas são na verdade bastante práticas e o professor é mesmo excelente a explicar as coisas (vai sempre com muita calma e passo a passo). Nos laboratórios fazíamos exercícios sobre as teóricas que realmente ajudavam a acompanhar ou  então serviam de apoio ao projeto. Este ano acho que foi a primeira vez que os projetos contaram 50% mas acho que a intenção é manter. São projetos que podem demorar algum tempo, mas não são complexos tipo SIRS, CMU, CPD... Tem ainda a vantagem que o professor ouve realmente os alunos :exploding_head: Recomendo vivamente"),
(57,1625194874,41,0,"Oi Pessoal, LP depende muito do método. Normalmente é com testes teóricos, mas o ano passado foi online e tínhamos uns exercícios práticos de programação. Estes exercícios não eram nada difíceis mas para ter a nota máxima tinham mesmo de ir aos HD e requeria esforço (mais esforço do que tempo)
Depois a outra parte da avaliação era teórica, esta era com a plataforma de quizzes do Rito :/ por isso aquilo era um bocado mauzito, eram escolhas múltiplas e mais uma vez não era preciso estudar muito porque a matéria não era muita e bastava fazer uns resumos da teórica. Mas por termos pouco tempo e pelas perguntas terem rasteira às vezes era uma questão de sorte
Há um projeto opcional que quase ninguém faz e que se fizerem dava 10% acho
Assim em geral o mais complicado era que se uma pessoa faltasse às aulas não percebia nada porque verificação formal e aqueles temas são um bocado esotéricos para estudar sozinhos (mas o prof publicava todos os vídeos das aulas). E o stor é 5 estrelas, muito pronto a ajudar"),
(58,1657555481,41,0,"Pos Mepp:
Gostei imenso das aulas teóricas o professor é super cativante e foi super aento à transição mudando o rumo da cadeira a meio e tudo. Teve muito precalços de covid e feriados e etc mas overall não deu muito trabalho.

Teoricas são super importantes e super praticas. Labs é mais individual e apoio ao projeto.

Exame é mesmo toda a materia e ter de fazer exercicios à mão, ainda me deu trabalho a estudar mas pequenos typos e isso o stor não desconta desde que ele perceba que tu sabes o que estás a fazer

Projetos são bastante guiados e o professor ajuda imenso. É fácil de ficar preso mas nos labs de projeto o professor ajuda nisso."),
(59,1625194874,42,0,"Para o pessoal de jogos, MDJ é um must mas acho que isso não tenho de falar muito, chama-se literalmente 'Metodologia de Desenvolvimento de Jogos', acho q é a continuação direta de Design de Jogos.Professores sao os mesmo, Rui Prada e o Carlos Martinho, ambos super cool. Acabam por literalmente desenvolver um jogo e no fim têm a 'Montra de Jogos' que seria literalmente como uma gaming conference para o pessoal exprimentar o jogo e obterem feedback, embora com covid n sei como isso vai ser mas em anos passados ajudei a montar e o evento e assim e acho super cool, mas tmb acho q quem for de jogos nao precisa de mt razao para se andar a dizer que deviam fazer esta cadeira :stuck_out_tongue:"),
(60,1625194874,43,0,"A cadeira mudou um pouco por causa da pandemia. Antes da pandemia além da parte pratica havia 2 mini testes, que foram substituídos por o professor fazer-nos algumas perguntas teóricas durante a discussão dos 2 primeiros Assignments. Como para o ano há a probabilidade disto voltar a ser tudo presencial, possivelmente os metodos de avaliação da cadeira voltam a ser diferentes.
Basicamente em P3D neste semestre tivemos 3 projetos, feitos em grupos de 3, relativamente longos, onde as aulas praticas até à semana da entrega eram de feedback sobre determinadas partes da entrega. A primeira entrega é para ser feita em C++, tínhamos de implementar umas quantas cenas de Computação Gráfica como Ray-Tracing, Anti-Aliasing, Soft Shadows, estruturas de aceleração do código, etc...
A segunda entrega é para ser feita em GLSL, que é uma linguagem feita para correr na GPU, acelerando o tempo de execução do programa. É basicamente implementar o Ray-Tracing que fizemos na primeira entrega mas em GLSL. A terceira entrega era para desenvolvermos um jogo em Unity onde esse jogo tinha de incluir diversas mecânicas e componentes presentes no enunciado. A cadeira overall é parecida com AVT, achei ambas bastante mais puxadas que a cadeira de CG que tivemos na licenciatura, mas por outro lado são muito mais praticas (não há exame), mas como disse no inicio, P3D para o ano é capaz de voltar a ter 2 mini testes, como havia antes da pandemia, caso isto volte a ser 100% presencial."),
(61,1631039145,44,0,"A cadeira de PADI divide-se em dois grande tópicos: planeamento e aprendizagem, tendo sempre um foco em 'increteza' meaning probabilidades. O grande objetivo da cadeira é chegar a reinforcement learning, que é utilizado quando existe um contexto de um agente a aprender através de experiências (self-driving cars, robots, etc), e é com este objetivo que todos os conteúdos da cadeira são apresentados. Na primeira parte, introduzem-se cadeias de markov, que são uma forma de modelar sistemas probabilisticos (sistemas onde existem varios estados, e com alguma probabilidade, se passa de um estado para outro) e depois acrescenta-se um agente, que pode tomar acoes, interagindo com o sistema. Na segunda parte, é feita uma revisão a aprendizagem supervisionada, de modo a relembrar conceitos básicos, e depois passa-se a reinforcement learning (que junta tudo o que foi dado anteriormente) onde temos um agente que pode tomar acoes no contexto de um ambiente, e recebe rewards pelas suas acoes, aprendendo a navegar no ambiente. Em termos de organização: a cadeira está bem estruturada, a teoria avança a um bom ritmo, embora as aulas não sejam muito 'engaging'. Nas aulas práticas, existem trabalhos a entregar em grupos de dois, onde se trabalha com 'toy' problems. A cadeira exige alguma matemática, principalmente matrizes e probabilidades, e algum calculo de gradientes na parte de aprendizagem supervisionada. Recomendação final: É uma cadeira interessante, principalmente para quem está na área de sistemas inteligentes. A única crítica é que não se lida com um problema 'a sério' pelo que parece que existe ali alguma falta na capacidade de aplicar o conhecimento na realidade."),
(62,1720107301,44,0,"23/24

PADI foi dado pelo professor Francisco Melo, que é hands down um dos melhores professores que já tive no Técnico. A maneira como leciona é super cativante e faz sempre questão de explicar os conceitos de várias formas e com exemplos fáceis de compreender, e de rever a matéria no início das aulas. As aulas práticas consistiam em implementar código em notebooks em grupos de 2, e ajudavam a pôr os conceitos em prática, apesar de por vezes serem um bocado atirar barro (código do copilot) até à parede até que funcionasse. Havia ainda homeworks, em que se resolviam alguns exercícios mais teóricos, que exigiam alguma matemática mas nada por aí além.

O exame tem algumas escolhas múltiplas, exercícios de aplicação e uma pergunta de seleção no fim. Há imensos exames de anos anteriores para praticar, e para além disso os slides e o livro da cadeira (escrito pelo professor) são muito completos."),
(63,1625194874,45,0,"É interessante, podes ver vídeos das aulas na página da cadeira, está pinned no #pava
Projetos fazem-se em 2/3 dias cada um, por isso tem carga de trabalho mínima e aprendes cenas bastante interessantes sobre Lisp e companhia.
O prof é bastante fixe, trabalhou na SISCOG no tempo do Lisp, por isso usou mesmo aquilo em produção."),
(64,1625194874,45,0,"Sim, este ano foi só projetos mas costumava haver testes acho eu. Os projetos foram a melhor parte da cadeira imo, a matéria é interessante mas as aulas eram meio lentas (na minha opinião) e isso dificultava um pouco tomar atenção
Mas os projetos são mesmo coisas bastante engraçadas, já houve anos em que era para fazer REPLs para Java, debuggers, etc. Este ano foi implementar despacho dinâmico em Java e o segundo fazer uns wrappers engraçados em Julia, é aquele tipo de projetos que podem ser tão complicados como quiseres, basicamente. Consegues ter uma base boa rapidamente mas são temas que consegues aprofundar muito se estiveres a gostar"),
(65,1657555481,45,0,"Pos mepp:
Não tem exame.

Tinha high hopes para a cadeira e fiquei desapontada porque o stor não deu metade da materia porque não estava minimanete pronto para o ritmo de mepp.

Projetos simples e interessantes. único problema é que os enunciados são bastante genéricos então perguntas se x vai ser avaliado, o professor diz que não nos labs e dpois desconta-te 4 valores por isso. E também não diz quanto vale a apresentação mas se não gostar somehow a tua nota desce tipo 4 valores.

Em resumo as notas são um bocado o que lhe apetecer avaliar depois de tu entregares e não o que enunciado pede.
Mas interessante overall."),
(66,1625194874,46,0,"Para o pessoal de visualização, PCM é bastante giro. A cadeira é basicamente fazerem varias cenas de, well, produção de conteudos Multimedia. Isto quer dizer fazer videos, posters, podcasts, todas umas varias cenas. A cena fixe é q a cadeira esta toda gamificada e aquilo funciona por tipo uma arvore como se fosse uma skill tree. Voces vão fazendo projetos bases e a medida que os fazem vao desbloqueando outros, achei o conceito super cool e é daquelas que voces decidem o que querem fazer, embora algumas coisas tenham 'dependecias'. Outra cena fixe é que se n me engano podem resubmeter para melhorar notas, so thats cool. Overall para o pessoal de visualização ou pessoal q tenha interesse é cool"),
(67,1745498134,46,0,"24/25
Cadeira super gira, mas bastante trabalhosa, para alguém que nunca teve nenhuma experiência com multimédia. Os professores são quase todos muito fixes e prestáveis. É super fácil de passar, mas para ter boa nota ainda é preciso pôr umas valentes horas. As componentes principais do jogo são a skill tree, onde fazem mini-projetos de variados tipos de multimédia à vossa escolha (por exemplo, eu escolhi mais cenas de áudio); os quizzes da aula teórica - super tranquilos; e a apresentação de multimédia no final do período, onde escolhem um tema livre e apresentam-no, usando também alguns tipos de multimédia. Aconselho começar logo a fazer os desafios na primeira semana e pensar num caminho que gostem. Olhem bastante para a training page dos desafios. Overall é uma cadeira muito diferente do comum e dou-lhe um 7/10, pela questão do trabalho e porque os labs não têm rigorosamente nada a ver nem com as teóricas, nem com o projeto, e apesar de serem extremamente fáceis, são obrigatórios."),
(68,1625194874,47,0,"Estou a fazer neste momento. Gostei bastante, estava com medo de fazer a cadeira porque há pouca gente de informática a fazer e ainda não fiz LN, mas fez-se bem. Há uma parte inicial que é preciso uma revisão de transformadas de fourier e outras coisas para a análise de sinais, mas a professora tem em conta que nem todos os alunos são de eletro e não há grande problema nisso, mas é importante entender essa parte. Os labs fazem-se bem, há 5 ao todo, e só um é que custou mais, acho que foi o lab 2 que foi muito longo e era em matlab. De resto são em python, são fáceis e mais interessantes. Aprendes alfabeto fonético, num dos labs fizemos classificação da idade (no ano passado detetaram sonolência), síntese de palavras a partir de concatenação de áudio e ngramas, são algumas coisas que aprendes. Quanto ao exame não tenho muito a dizer porque ainda não fiz, mas não parece terrível. Em geral a cadeira é bastante interessante e diria de dificuldade média. Uma coisa que achei estranho é que por alguma razão dos 5 labs são escolhidos apenas 3 aleatoriamente e só esses é que ela avalia. Para futuros alunos, esta cadeira é dada há anos pela mesma professora e penso que este é o último ano em que ela vai dar a cadeira e a meio do semestre ela disse que ainda não havia ninguém para a substituir para o ano. Por isso se quiserem mesmo fazer e se eventualmente houver alguém para dar a cadeira, vejam quem é a dar porque sinto que esta cadeira correu bem por a professora explicar bem e por estar bem organizada. Pode ser que a professora reconsidere e dê a cadeira para o ano."),
(69,1720107994,47,0,"23/24

Esta cadeira na prática foram três mini-cadeiras. Uma sobre processamento de sinal e técnicas históricas de síntese e modelação de fala, dada pelo professor Luís Caldas de Oliveira, uma sobre técnicas de classificação de fala, tanto históricas como mais recentes, dada pelo professor Alberto Abad, e outra sobre sistemas modernos de processamento de fala e chatbots de diálogo, dada pelo professor Bruno Martins. A parte de processamento de sinal por vezes é um pouco mais chata para quem não teve eletro, mas percebe-se bem se uma pessoa se abstrair da matemática um pouco. As outras partes são bastante interessantes, embora pareça ser um bocado daquelas cadeiras em que se cobre muita coisa por ter um programa que não foi encurtado pós-MEPP, e por isso tem muitos assuntos, com muita matéria por aula. As aulas também têm quizzes feitos no moodle, que por vezes são difíceis, mas só podem beneficiar a nota final.

Nos laboratórios trabalha-se nas três entregas do projeto (uma por 'mini-cadeira'). No primeiro mexe-se com processamento de sinal e um pouco de síntese de fala, no segundo faz-se classificação num dataset, e o terceiro é mais aberto, e consiste em construir um sistema de diálogo (podem fazer o que quiserem, desde que justifiquem). Faziam-se bem e davam para pôr os conhecimentos em prática. Dá para fazer a maior parte dos projeto nas aulas, por isso leva-se só um pouco de trabalho para casa.

O exame é um pouco mais chato, porque é 95% escolhas múltiplas, nem sempre muito fáceis, e 3 perguntas de resposta extensa, também não particularmente fáceis (e as notas foram bastante baixas este ano, por isso não é aquela cadeira 'fácil' para subir a média imo). No entanto, os professores disponibilizam imensos materiais de estudo e prática, como mock quizzes no moodle, slides, capítulos de livros etc. Destaco o site learnius.com em que o professor LCO tem literalmente um Zettelkasten de obsidian com os conceitos todos da cadeira, que foi super útil e algo que se todos os professores tivessem teríamos um mundo melhor. Os professores eram todos sempre prestáveis e esclareciam as dúvidas de forma clara.

No geral, é uma cadeira underrated, e recomendo (não se deixem intimidar pelas coisas de processamento de sinal)."),
(70,1625194874,48,0,"Adding to this. Fiz (=inscrevi me em) PIV no primeiro semestre deste ano, tinha grande expectativa para esta cadeira porque curto bué de cenas visuais portanto estava a espera que fosse aprender merdas nesse sentido - principalmente mais viradas para detecção de merdas pelas câmeras etc. Etc. Quando me apercebi estávamos a aprender merdas sobre pin-hole câmeras e posições de câmera - nada do que tinha em mente e interesse. A abordagem ao processamento de imagem  pareceu-me demasiado à moda antiga quando hoje em dia grande parte é feito com deep learning (correct me if I'm wrong)
Para além das merdas sobre a matéria em si achei que a parte prática e parte teórica estavam super mal organizadas e não estavam de todo em sintonia. com base no feedback que já vi de pessoal se fosse me inscrever numa cadeira para a parte visual escolheria CVI"),
(71,1625194874,48,0,"PIV é em grande parte para eletro, é mais sobre como é que a câmara está no mundo real, o projeto era construir um modelo 3D a partir de um vídeo (ligar frame a frame, perceber a rotação da câmara e aplicar a matemática). Tem alguma matemática, nada difícil mas é a matemática chata de CG, de matrizes de rotações e de homografias. Avaliacao era 50/50 projeto exame."),
(72,1658600084,49,0,"Pos-MEPP:

A cadeira está dividida em 2 partes:
- a parte de procura em que se dá CSPs (Constraint Satisfaction Problems) e alguns algoritmos relacionados com CSPs (esta parte é pretty much uma extensão da matéria dada em IA sobre CSPs - (IA antes do MEPP))
- a parte de planeamento em que se discute como se declara um problema para ser resolvido por um planner e se vêm alguns algoritmos para determinar as ações que um agente faz.

Nas teóricas dá-se a parte de procura durante metade do período e a parte do planeamento na metade final do período.

Nas primeiras 3/4 semanas as práticas era fazer exercícios de fichas de problemas que os professores disponibilizavam semanalmente. 

Depois disso saiu o projeto que era sobre a parte de planeamento. Consistia em especificar um problema de otimização para PDDL de modo a ser resolvido por um planner (o Fast Downward) para dar a solução ótima. O projeto foi um shitshow porque ninguém conseguiu fazer uma solução eficiente e as soluções que os professores das práticas propuseram (que foram variando ao longo do tempo) também não eram eficientes (era suposto cada instância correr em menos de 1 minuto e mesmo com a última solução proposta pelos stores o meu grupo teve que correr as instâncias médias com um algoritmo que não dava a solução ótima). 

No final, a Lynce percebeu que ninguém estava a conseguir ter tempos de menos de 1 minuto, então ela acabou por normalizar as notas e no geral as notas do projeto foram boas (apesar de ter sido um pouco pain fazer o projeto, à procura da solução).

Apesar do projeto ter sido um pouco painful, para o ano(2022/2023) acredito que seja melhor porque a Lynce percebeu que o projeto foi um pouco puxado e que não houve muito tempo para o fazer. Acho que ela está a pensar fazer o projeto sobre procura (que é mais fácil).

O exame foi bastante fácil. Não havia exames de anos anteriores, mas os exercícios do exame eram bastante semelhantes aos das fichas portanto quem fizesse as fichas tinha boa nota no exame. Além disso, o exame tinha 5 grupos, mas só contava os 4 melhores (portanto podias fazer o exame todo e contava só os 4 melhores ou fazias apenas 4 grupos)."),
(73, 1721302038,49,0,"23/24

A matéria da cadeira está bem descrita acima. Diria que é interessante para quem gosta da área mais clássica de IA, mas não terá a maior aplicabilidade para quem não está dentro da área. Nas aulas, a Lynce limita-se essencialmente a ler os slides, que são razoáveis e têm alguns exemplos, mas esclarece bem as dúvidas que colocares. Nas práticas resolves exercícios práticos estilo exame. Cuidado que a Lynce é pouco simpática a disponibilizar materiais, por isso não contes com resoluções dos exercícios ou mais do que 2 exames resolvidos. 

No projeto tinhas que usar uma linguagem chamada MiniZinc em que modelas constraints e ele dá-te as soluções que verificam essas constraints. Para além do enunciado, havia um paper e um capítulo de um livro que dava indicações sobre como modelar o problema. Depois tens uma parte chata de processamento em python que a meu ver era só completamente desnecessária porque não tem nada a ver com a cadeira. Tínhamos que aplicar lógica em python a processar json, e como a avaliação era automática o formato tinha que ser exatamente como eles queriam (e estava mal especificado e ambíguo em muitos pontos). O meu conselho é fazer isso com alguma antecedência porque a avaliação automática é corrida por eles quando lhes apetece, *a la* dailies para quem teve Compiladores e PO em LEIC, para não vos acontecer ter a lógica toda bem e ter o resultado mal formatado. 

O exame era basicamente exercícios do mesmo estilo das aulas práticas. Aprendes os algoritmos, aplicas e a coisa corre bem, sem perguntas teóricas muito  ou escolhas múltiplas.

No geral, é uma cadeira que se faz bem e não dá demasiado trabalho, mas aconselho alguma precaução com a indisponibilidade da Lynce a nível de recursos e de responder a emails, etc."),
(74,1625194874,50,0,"[Tomás Lopes](https://github.com/tomasbflopes):

Não gostei. Houve vários fatores que se juntaram todos e fizeram com que PRI tivesse sido mesmo uma escolha horrível:
- O prof mudou este ano (passou a ser o Rui Henriques, o que tipicamente até seria uma coisa boa, mas information retrieval não é a área dele, e PRI é uma cadeira com muito, mas muito mais teoria para dar do que AASMA, por exemplo. O estilo de aulas dele não se adequa nada a uma cadeira como PRI, e as aulas acabavam por ser muito chatas)
- Dá jeito já ter experiência com AI/data science stuff, porque fartam-se de usar numpy/scikitlearn na segunda metade do projeto para cenas de clustering, classification etc. Eu não tinha na altura, por isso acabei por me lixar um bocado e isso fez com que o projeto demorasse imenso e fosse muito trabalhoso. É definitivamente uma cadeira melhor de se fazer no 2º ano comparado com o 1º
- Muita matéria, é preciso muito estudo para o exame. Os exames costumavam ser muito fáceis, mas com o Rui Henriques, o exame foi horrível. 2h30 para fazer, e ele teve que dar mais 20 mins porque ninguém tinha acabado, e ele ainda deu bónus de 1v a toda a gente que foi ao exame pelo simples facto de terem ido ao exame, e ainda deixou passar gente que tinha tido 8.5 no exame quando a nota mínima era suposto ser 9.5. Um shitshow autêntico.

Essencialmente a cadeira fala de tudo e mais alguma coisa sobre information retrieval, desde text processing, aos básicos de information retrieval tipo TF-IDF a retrieval models mais avançados tipo BM25, a clustering/classification to aid retrieval, dimensionality reduction, feature extraction, a web crawling, pagerank, etc. De tudo um pouco. Quem achar isso interessante e já tiver tido tipo CD, Aprendizagem, ou cadeiras desse género, força, isto assumindo que é o Bruno a dar a cadeira para o ano"),
(75,1625313631,51,0,"A matéria é bastante interessante. Ao longo do semestre são leccionados vários modelos de representação do conhecimento, começando pelo mais básico FOL (First Order Logic), já leccionado antes na disciplina Lógica para Programação (LP).

Basicamente é só isso. Dás modelo atrás de modelo sendo que cada um leccionado resolve prolemas que os anteriormente falados não conseguiam resolver.

Quanto à forma como é leccionado. A cadeira envolve dois testes (o primeiro bem mais teórico que o segundo) e um bónus de um trabalho facultativo. Caso decidas fazer o trabalho podes fazer em grupo de dois ou individualmente e soma um bónus de 10% sobre a nota que tinhas anteriormente (desde que o trabalho esteja 'aceitável'). Por exemplo se com os teste estiveres com 15.6 com o bonús: 15.6 * 1.10 = 17.16.

Os testes são bemmmmmmm longos para o tempo (1h30). Mas em contrapartida a professora dá 30 minutos de tolerância extra (excepto na repescagem for some weird reason).

A parte má é que os apontamentos / slides, basicamente todo o material não é suficiente. Tem muito pouco de parte prática, tipo um exercício do ínicio ao fim feito, só mesmo indo às aulas é que se acompanha bem a matéria.

As práticas são utilizadas para resolução de fichas mas, pelo menos no ano remoto, entrávamos e a professora metia-nos logo em breakout rooms, normalmente duas, então estávamos todos um pouco perdido de como se resolvia os exercícios."),
(76,1632267315,51,0,"Em termos de interesse do que é leccionado gostei mesmo bué, mas em termos de organização deixa um pouco a desejar, mas penso que presencial se adapte melhor.
Basicamente as teóricas andam relativamente rápido e funcionam em modo de capítulos em que em cada um aborda uma nova forma de representação de conhecimento e que resolve um ou mais dos problemas da forma abordada no capítulo anterior.
Os pontos maus é que as práticas é para tu e os outros alunos tentarem resolver exercícios with little to none exemplos práticos e o mesmo para o teste.
Em contrapartida podes apresentar um trabalho de tipo 15-20 minutos para subir a tua nota final por 10%.

TLDR: Se fores a quase todas as aulas e apresentares o trabalho para subir a nota acabas bem, senão pode-se complicar mas bastante interessante)"),
(77,1744889137,51,0,"## 24/25

Só me inscrevi na cadeira pq precisava dela para completar a especialização e depois de feita sei o mesmo que sabia antes(e sinceramente nao tem grande relevancia para os dias de hoje).

Basicamente a cadeira começa com FOL e alguma lógica 'básica' dada na licenciatura, e as seguintes semanas é dar diferentes tipos de famílias que tentam representar o 'conhecimento' e inferir sobre o que se trata o conhecimento('raciocínio'). 
A avaliação tem duas partes 50/50:
  . 5 maps, feitos nos últimos 15/20 minutos da primeira aula prática da semana, sobre o que foi feito nas aulas práticas da semana anterior. Na última semana é possível repetir os maps que se quiser para melhorar as notas.
  . 1 Exame que se foca basicamente na teoria das famílias que se estudam em aula, pontos fortes e fracos, decorar uma teoria e espetar no exame, e há um exercicio prático sobre uma das familias não avaliadas nos maps(a stora diz qual é na ultima aula prática)

Nas aulas práticas vocês passam uma hora a tentar fazer um exercicio que nunca viram na vida e com pequenas dicas da stora, e só nos ultimos 30 minutos ela pede a alguem para o resolver e mostra a solução.
Não vale a pena pedirem por soluções dos exercicios, maps, ou de exames passados(nem mesmo pedir exames, foi um milagre ela ter posto 1 no fenix) porque segundo ela 'se vos der as soluções voces perdem o vosso espirito critico e nao sabem fazer um ligeiramente diferente'

Se quiserem uma cadeira só para encher creditos esta nem é má de todo, basta irem a todas as práticas e decorarem a matéria teorica(não são mais de 5 folhas de resumo).
Para o ano é a ultima vez que vai ser lecionada, pq (confirmem) em 26/27 vai ser fundida com PP."),
(78,1625194874,52,0,"robos sociais é a melhor cadeira que podes ter, nao tem exame e os professor são incriveis e super prestaveis inclusive eu enviei um email no final a agradecer pela cadeira. Tens de escrever um paper sobre um tema que te dão mas é super giro pq são temas interessantes e tens vários à escolha e fornecem-te materiais para te guiares. Os labs sao qb inuteis mas são bons para obteres feedback do teu projeto e a stora ajuda-te a escolher qual o melhor caminho para nao fazer algo mt lixado nem muito fácil.
O projeto é super acessivel e é escolheres um dos robos disponiveis mas basicamente é saberes que robo escolher e dps fazeres a parte da interação humana mais engraçada e dinâmica possivel para te divertires um pouco. Unica critica: a entrega do projeto e durante a epoca de exames em janeiro mas tens mais que tempo para fazer. Cadeira 10/10"),
(79,1625194874,52,0,"TL;DR não recomendo muito

epá. as teóricas não se aproveitou quase nada. Não haviam testes nem quizzes nem nada por isso só precisavas de uns conhecimentos mínimos dos slides para fazer alguns relatórios. No final, acho que para aí 5 pessoas incluindo o prof estavam no zoom; os labs não posso comentar porque eu não ia pois tinha uma outra aula na mesma altura; Finalmente, o projeto em si. Epá, eu curti minimamente mas isso fui eu. Aquilo foi mais chato do que outra coisa mas essencialmente era pegares num dos robôs disponíveis, fazeres uma interação e arranjares pessoal para a fazer é possível que o que eu esteja a dizer já não se ajuste ao novo formato mas pronto, foi a minha experiência."),
(80,1632267151,53,0,"Hi, posso dar o meu feedback mas aviso que eu não gostei muito da cadeira e acho que é trap. As teóricas são pouco interessantes e o professor das teóricas é bastante chato (alguém pedia para não ligar a camâra nesse dia porque estava doente e ele continuava a aula toda a insistir, mandava-nos mails a perguntar porque é que não fomos a uma aula, dava aulas numa treadmill ahaha, queria user tests com 20 pessoas na pandemia). Para o projecto propões o que queres fazer baseado num paper de um conjunto que eles dão. Podes usar oculus quest, google cardboard que eles disponibilizam. Eles deram muito pouco apoio para o projeto e passear os oculus entre todos os membros do grupo é uma chatice. Isto é só a minha opinião, acho que se quiseres muito aprender a desenvolver coisas para vr vai em frente!  (há um novo stor responsável este ano as coisas podem mudar)"),
(81,1625194874,54,0,"SEC é Sistemas de Elevada Confiabilidade dada pelo Miguel Matos, cool guy que ensina bem. A matéria é basicamente o filho de DAD com SIRS e se tiverem feito estas duas cadeiras têm na boa metade da teorica feita, vão basicamente abordar as falhas bizantinas que não falam de DAD. Para quem gostou de DAD e SIRS vai adorar SEC, e para mim é de longe a cadeira mais gira de SD. No entanto é tambem a mais desafiante e de longe a que da mais trabalho. No entanto recomendo altamente quem va fazer SD ou Ciber a fazer SEC pq é das materias mais importantes que vão dar. O projeto é um sistema distribuido super seguro, basicamente projeto de DAD com criptografia a mistura. Na teorica dao algoritmos bizantinos e alem disso um pouco de Hardware seguro, Smart Cards e Blockchain (o Matos faz investigação nisto por isso se estao interessados ele é o vosso go to). Overall da super trabalho mas acho que vale a pena, quem ja foi enrabado com DAD e SIRS aguenta SEC tmb lmao"),
(82,1657555481,54,0,"Pos Mepp:
Aconselho fazer DAD e SIRS antes. Imo das melhores cadeiras a nível de conteúdo teórico (miguel matos dá aulas muito boas, Paolo romano também só tem o problema da barreira de linguagem). Exame é exigente mas se estudares/fores as aulas está chill.

Projeto bastante interessante mas também bastante exigente e extenso. Se não tiveres tempo de acabar e souberes o que farias na discussão sobe a nota which is nice."),
(83,1625194874,55,0,"Eu diria que SIRS é das cadeiras mais importantes do mestrado, onde ensinam todas as bases de segurança (o que se dá em SD é muito lackluster to be honest), ainda é um pouco chocante como Machine Learning passou para licenciatura mas SIRS ficou em mestrado. A cadeira em geral é para o mais dificil, o projeto é bastante fixe porque podem escolher um de vários 'cenarios' mas é tambem dos mais complicados/trabalhosos. Os professores ensinam bem e a materia é overall interessante, os testes costumam ser complicados but then again é um pouco inerente do tema da cadeira. Overall acho que é das cadeiras que mais se aprende e das mais uteis também.

---
Projeto:

Há N temas que se ordena por ordem de preferência:
Metade dos temas ou perto disso incluem fazer uma aplicação (o meu grupo tinha, mas os meus colegas sacrificaram-se por mim), o @Daniel 'Raminhos' Matos trabalhou na App e depois teve CMU, onde já sabia montes de tralha que teve que aprender em SIRS para poder fazer a App
Ignorando isso, o projeto resume-se a:
- Inventa e implementa um protoclo de comunicação com building blocks criptográficos
- Utiliza TLS desde que tenhas cumprido o passo 1
- Isto tudo numa arquitetura cliente servidor

E é isso que me chateia, eles inventam os temas para tentar diferenciar e tentar que se aprenda coisas diferentes com as apresentações dos outros grupos, mas na realidade vai dar tudo ao mesmo e tens metade do 'curso' a perder a vontade de viver com Mobile só porque o Pardal acha giro ver uma App num telemóvel"),
(84,1657555481,55,0,"Pos Mepp:
Das cadeiras mais 'realistas' que fiz. Foi dos projetos mais interessantes que fiz mas deu um porra de trabalho. Foram 3 semanas para fazer e no enunciado dizia que era esperado 48 semanais de cada elemento. Consoante a tua escolha do tema há projetos mais ou menos extensos. O que quer que faças a discussão é uma apresentação onde os professores tentam destruir tudo o que tu dizes e decisões que tomaste (mesmo para destabilizar) e a tua nota depende do quanto te aguentas e sabes o que o teu sistema garante ou não).

O exame é decorar as aulas teoricas. Pormenores de porcaria e etc.

Pior parte é o projeto valer apenas 40% e dar imenso trabalho."),
(85,1625355246,57,0,"SSof o semestre passado foi primeira parte aprender vulnerabilidades e dar exploit delas (SQLi, XSS, Race Conditions, Buffer Overflow...) com o Pedro Adão, se curtires disso então é muito interessante. A segunda parte da matéria (a meio do semestre) é estudar information flow policies (e.g. perl taint mode) e outros mecanismos desses (e.g. dynamic flow analysis em javascript) o semestre passado para o projeto da 2ª parte tivemos que realizar uma tool que dado um conjunto de inputs (sources,sinks,vulnerabilities) tinhamos que detetar se ia haver vulnerabilidade ou não, é um context switch completo comparado a primeira parte da matéria visto que é basicamente estudar conceitos como anotação WHILE, big step semantics, small step semantics, symbolic execution... e não actually dar exploit de nada. Se curtires de segurança informática então é um must na minha opinião independentemente da 2ª parte da matéria ser kinda mehh. I would say 4.5 baits out of 10"),
(86,1657555481,57,0,"Pos Mepp:
Numa semana tinhas uma aula teorica de lbs e uma de vssd e igual para labs. OU seja, tinhas duas cadeiras completamente diferentes ao mm tempo.

Ana Matos torna lbs doloroso.
Pupo deu teoricas vssd (não foi bom nem mau foi meh)
labs vssd é tipo ctf com scoreboard foi a unica parte que gostei.
labs lbs é exercicos tipo exame.

exame parte de lbs é igual aos labs, parte de vssd é decorar slides."),
(87,1625194874,58,0,"Cadeira com pouca carga horária. Esta cadeira, feita com malta de biomédica, baseia-se muito em senso comum. Tirando algumas perguntas de labs (em que fazem-se pequenos cálculos/pequenos exercício de bases de dados ligados a dados biomédicos) esta cadeira não tem matéria prática. 90% é teórica. A avaliação é feita em 5 homeworks (individuais, que consistem em responder a respostas abertas sobre um certo tema) que se fazem rapidamente + 1 exame teórico. A matéria em si aborda o funcionamento das tecnologias de informação na saúde (bases de dados, sistemas de apoio à decisão, processamento de dados textuais, nomenclaturas e normalizações de informação, um pouco de bioinformática, ética na privacidade de dados, saúde pública, etc).
Nesta cadeira não se aprende muito, maioria dos temas são muito simples e, se pensarmos um pouco, conseguimos desenvolvê-los (com conhecimento e cultura geral). O exame é semelhante aos homeworks: pergunta abertas em que não é preciso pensar assim tanto. O melhor desta cadeira é são as “field trips”: este ano (covid) fomos ao hospital da luz. No ano passado foram a mais sítios (fundação Champalimaud, …). Estas field trips são realmente interessantes e divertidas, para além de ser um ponto de contacto com o mundo real. As aulas teóricas são boring, há 3 docentes que vão rodando ao longo das teóricas. Mas é uma cadeira que se faz perfeitamente a ler os slides.
Resumindo: boa cadeira para quem tem interesse na área ou não se quer esforçar muito (mas para estes pode vir a ser too boring)."),
(88,1625194874,59,0,"Para o pessoal de Engenharia de Software, TVS (Teste e Validação de Software) acho que é uma cadeira fixe que como pessoal de ES é bastante recomendado fazerem, also para o delegado acho que deviam contactar o homem porque na cadeira de TVS o homem esta um pouco baralho sobre a cadeira que esta a avaliar lmao. Nevertheless quem esta a fazer ES ja devia saber que ia ter de fazer esta por isso nada de novo"),
(89,1625247282,60,0,"[Daniel Gonçalves](https://github.com/masterzeus05):

Eu tenho bastante interesse em dados e em visualização de dados, e este cadeira é focada nesses temas, portanto eu estou um bocado biased.

Em termos de avaliação, a cadeira é só avaliação contínua, tens Homeworks e tens Projeto.

Os Homeworks são trabalhos de 2 em 2 semanas (se não estou em erro) e basicamente aplicas a teórica. Um deles é resumir um Paper por exemplo, outro era inventares uma forma de visualização para um tema à tua escolha, não é nada de muito complicado e é divertido.

O Projeto consiste numa web app, em javascript, que vai conter várias visualizações que todas juntas apresentam um tema à tua escolha, p.e., o nosso era Acidentes Rodoviários no Reino Unido, e tínhamos um mapa com a quantidade de acidentes, uma pirâmide de população com o número de acidentes por idade/sexo, entre outros.

No semestre passado usamos, para os gráficos, D3.js, que se deve manter. Os laboratórios servem, inicialmente, para explicar como é que se usa o PDI (Kettle) e o D3.js, e daí para a frente, servem para apresentações dos checkpoints do projeto.

O objetivo do projeto é responder a uma série de questões de poderão surgir ao pensares no tema. Este projeto tem 5 checkpoints, o primeiro serve para apresentares a tua ideia de visualização, assim como as perguntas que queres responder; o seguinte é para mostrares os dados que vais buscar; depois fazes um desenho da visualização toda que vais implementar; depois tens um protótipo e por fim um relatório final com a entrega. Todos os checkpoints (exceto o último) permitem-te melhorar a nota do anterior, ou seja, no Checkpoint 2 podes reentregar o Checkpoint 1 e subires a nota. Em cada checkpoint, tens de fazer uma apresentação sobre o próprio, que não podem ser muito longas, acho que eram por volta dos 5 minutos? (estas apresentações também contam para a nota)

Mais algumas notas: Não sei como foi em anos anteriores, mas neste o professor lançava vídeos nos dias anteriores à aula, e depois durante a aula discutia-se melhor o tema e tiravam-se dúvidas

Overall: aconselho imenso esta cadeira para quem gosta de gráficos, mexer em dados, etc. Em termos de carga, é média, exceto o projeto, que pode ir um bocado além, 
devido à possível complexidade do projeto e às apresentações todas."),
(90,1721302900,60,0,"23/24

VI este ano funcionou com um modelo de aula invertida, em que vias vídeos em casa feitos pelo Daniel Gonçalves (professor, não o de cima) e depois na aula teórica havia um modelo mais interativo (com polls e cenas interativas em que tinhas que desenhar visualizações e afins) e um quiz por semana por escrito e com perguntas abertas (não eram particularmente fáceis, mas como não contavam todos acabava por beneficiar à mesma). Achei o modelo de aula invertida um pouco parvo porque depois as aulas em si não tinham muito conteúdo nem estavam tão bem dadas, e acabei por ir só àquelas que tinham avaliação. Em termos de matéria, é bastante interessante e como tem elementos interativos e visuais acaba por ser intuitivo de compreender, ainda que alguns dos princípios de que falem sejam um bocado arbitrários. É só aceitar. Ainda assim, acho que dá um conjunto de skills e intuições muito úteis e que complementam bem praticamente qualquer outra área.

O projeto foi o foco da cadeira, e parece-me que a experiência com o projeto vá ser muito variável dependendo de vários fatores. Consistia em fazer um dashboard em D3js com várias visualizações interativas sobre um mesmo conjunto de dados. A ideia era que por exemplo pudesses ter um mapa com valores por país, e ao dar hover num país dava highlight de uma barra ou círculo correspondendo ao mesmo país numa outra visualização, de forma interligada. Havia 4 checkpoints de entrega (proposta, tratamento de dados, storyboard, protótipo em código) e uma entrega final com tudo feito, e dava para melhorar a nota dos checkpoints. Para além disso havia homeworks para os laboratórios, com o intuito de que fosses aprendendo d3js para não ser só para o checkpoint 4 e entrega final. 

É uma cadeira que exige trabalho constante a todos os níveis durante o período, mas que não tem exame. Aconselho a terem uma ideia mais ou menos definida de um dataset ou domínio interessante para explorar, porque senão terão que seguir as sugestões deles que não são muito inspiradoras. Para além disso, na primeira semana comecem logo a ver os exemplos que eles têm no moodle de visualizações de outros anos para saber o que é possível. Sinto que com um bom dataset (dados numéricos, categóricos, geográficos, etc. com poucas entradas em falta) o projeto faz-se bem, mas se tiverem um que seja muito linear ou incompleto a coisa poderá correr mal, porque têm que dar lock down disso quase na primeira semana e se escolherem mal estarão a fazer uma omelete sem ovos durante o resto da cadeira. Tivémos dores de cabeça a processar os dados porque fizémos 'join' de vários datasets separados e havia incompatibilidades chatas. Aconselho também a escolherem um turno de laboratório com um bom professor (Tomás Alves) ou professora, porque é ele/ela que avalia os checkpoints e os homeworks e esclarece as dúvidas todas. 

Não é muito difícil tirar uma nota razoável (16+), porque dá para melhorar os checkpoints e eles não corrigem de forma muito severa. 

Tl;dr Boa cadeira, interessante mesmo para quem só tenha um interesse geral por gráficos e visualização, mas pode dar algum trabalho se não tiverem o projeto bem encaminhado desde o início")
;